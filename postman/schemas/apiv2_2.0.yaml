{
    "swagger": "2.0",
    "info": {
        "version": "v1",
        "title": "Mediavalet API Test 2.0 - before sending to postman support check"
    },
    "host": "localhost:44379",
    "schemes": [
        "https"
    ],
    "paths": {
        "/features/{featureId}/currentUser": {
            "get": {
                "tags": [
                    "AppUserFeature"
                ],
                "summary": "Check whether the specified feature is enabled for the current user.",
                "description": "When we support multiple user-level feature flags, we will add another \r\nendpoint that will retrieve all the feature flags for the user.",
                "operationId": "AppUserFeature_GetAppUserFeatureById",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "featureId",
                        "in": "path",
                        "description": "The id of the feature to check.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AppUserFeatureDto"
                            }
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "A matching feature record was not found."
                    }
                }
            }
        },
        "/features": {
            "patch": {
                "tags": [
                    "AppUserFeature"
                ],
                "summary": "Add (enabled) or remove (disable) the specified feature for the current user.",
                "operationId": "AppUserFeature_SetAppUserFeature",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "patchOperations",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "A matching user record was not found."
                    }
                }
            }
        },
        "/assets/{assetId}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset",
                "description": "Retrieve an asset based on the asset id parameter.",
                "operationId": "Assets_GetAssetAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "put": {
                "tags": [
                    "Assets"
                ],
                "summary": "Update Upload Process To Complete",
                "description": "Completes upload process for asset and updates description for now.",
                "operationId": "Assets_UpdateAssetAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetUploadDto",
                        "in": "body",
                        "description": "The upload metadata.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssetUploadDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assets"
                ],
                "summary": "Remove Asset",
                "description": "Deletes an asset.",
                "operationId": "Assets_DeleteAssetAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "isHardDelete",
                        "in": "query",
                        "description": "The boolean to flag hard deletion of asset.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "404": {
                        "description": "An asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Assets"
                ],
                "summary": "Update Asset With Patch Operations",
                "description": "Updates an asset with a list of patch operations.",
                "operationId": "Assets_PatchAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patchOperations",
                        "in": "body",
                        "description": "List of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    }
                }
            }
        },
        "/assets": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Assets With Search Criteria",
                "description": "Search for assets within a library that match optional search criteria.",
                "operationId": "Assets_SearchAssetsByTermAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetFolderDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Asset",
                "description": "Creates an asset and returns newly created asset information.",
                "operationId": "Assets_CreateAssetAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Request with asset title, size, id.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateAssetRequest"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/UploadInfoDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/search": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Assets With Search Criteria",
                "description": "Search for assets within a library that match optional search criteria. This method allows for longer query strings.",
                "operationId": "Assets_SearchAssetsByTermPostAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssetSearchDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetFolderDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/relatedassets": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset Related Assets",
                "description": "Retrieve related assets based on the asset id.",
                "operationId": "Assets_GetRelatedAssetsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/RelatedAssetsDto"
                        }
                    },
                    "404": {
                        "description": "A related asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Association with Asset and Related Assets",
                "description": "Add related assets to an asset.",
                "operationId": "Assets_AddRelatedAssets",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "relatedAssets",
                        "in": "body",
                        "description": "List of related asset ids.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RelatedAssetsRequest"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/RelatedAssetsDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/relatedAssetsGalleryUrl": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Related Asset Gallery Url",
                "description": "Retrieve the url for use with related assets gallery application.",
                "operationId": "Assets_GetRelatedAssetGalleryUrl",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/RelatedAssetGalleryUrlDetailDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/assets/{id}/relatedasset/{token}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Related Assets",
                "description": "Retrieve related assets for an asset.",
                "operationId": "Assets_GetRelatedAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": "The url token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/RelatedAssetsDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/searchRelatedAssets": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Related Assets",
                "description": "Search for assets and exclude asset that match search criteria to retrieve assets that can be related to current asset.",
                "operationId": "Assets_SearchRelatedAssetsByTermAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetFolderDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/relatedassets/{relatedAssetId}": {
            "delete": {
                "tags": [
                    "Assets"
                ],
                "summary": "Remove Related Asset",
                "description": "Remove related asset based on asset id.",
                "operationId": "Assets_RemoveRelatedAsset",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "relatedAssetId",
                        "in": "path",
                        "description": "The related asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/checkOut": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Check-Out Asset",
                "description": "ChecksOut an asset and returns the current blob URL.",
                "operationId": "Assets_CheckOutAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset Id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "checkOutComment",
                        "in": "body",
                        "description": "The user comment collection.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server.",
                        "schema": {
                            "$ref": "#/definitions/ValidationResultDto"
                        }
                    }
                }
            }
        },
        "/assetCheckIn/{assetId}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Check-In Asset",
                "description": "ChecksIn an asset and returns newly created asset media file information.",
                "operationId": "Assets_CheckInAsset",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/NewAssetInfoDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "put": {
                "tags": [
                    "Assets"
                ],
                "summary": "Update Checked-In Asset",
                "description": "Update asset's checked-in.",
                "operationId": "Assets_UpdateCheckInAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "The request metadata to be used by the operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckInAssetRequest"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/AssetDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request.",
                        "schema": {
                            "$ref": "#/definitions/ValidationResultDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assetCheckIn/{id}/validate": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Validate Check-In Filename",
                "description": "Validate asset check-in filename.",
                "operationId": "Assets_AssetCheckInValidate",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The asset Id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "fileName",
                        "in": "body",
                        "description": "The asset file name.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "Bearer bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request.",
                        "schema": {
                            "$ref": "#/definitions/ValidationResultDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "403": {
                        "description": "Server refused the request.",
                        "schema": {
                            "$ref": "#/definitions/ValidationResultDto"
                        }
                    },
                    "409": {
                        "description": "The asset with the supplied file name already exists."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/keywords": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset Keywords",
                "operationId": "Assets_GetKeywordsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeywordDto"
                            }
                        }
                    },
                    "404": {
                        "description": "A keyword was not found."
                    }
                }
            },
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Association of Assets And Keywords",
                "description": "Associates list of keywords to specified asset.",
                "operationId": "Assets_AttachKeywordsToAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "keywords",
                        "in": "body",
                        "description": "List of keywords to be created and assigned to the asset.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/AssetKeywordsDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/keywords/{keyword}": {
            "delete": {
                "tags": [
                    "Assets"
                ],
                "summary": "Remove Asset Keyword",
                "description": "Removes keyword from asset.",
                "operationId": "Assets_RemoveKeywordFromAsset",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "The keyword name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/categories": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset Categories",
                "description": "Returns list of categories an asset belongs to",
                "operationId": "Assets_GetCategoriesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "categoryFeatures",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FolderDto"
                            }
                        }
                    },
                    "404": {
                        "description": "An asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "put": {
                "tags": [
                    "Assets"
                ],
                "summary": "Update Association of Asset And Categories",
                "description": "Associates specified asset into list of categories, replacing previous list with provided list",
                "operationId": "Assets_ReplaceCategoriesInAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryIds",
                        "in": "body",
                        "description": "List of category guids",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetCategoryResponseDetailV4"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Association of Asset And Categories",
                "description": "Associates Asset into list of categories",
                "operationId": "Assets_AttachCategoriesToAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryGuids",
                        "in": "body",
                        "description": "Collection of category guid’s.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/AssetCategoriesDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/categories/{categoryId}": {
            "delete": {
                "tags": [
                    "Assets"
                ],
                "summary": "Remove Asset Category",
                "description": "Removes the category from the asset.",
                "operationId": "Assets_DetachCategoriesFromAsset",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The guid of the category.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/attributes": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset Attributes",
                "description": "Retrieves attributes associated with an asset.",
                "operationId": "Assets_GetAttributesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetAttributesDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Asset Attributes",
                "description": "Add attributes to an asset.",
                "operationId": "Assets_AddAttributesToAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "attributes",
                        "in": "body",
                        "description": "Collection of attribute guid and attribute value.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/uploads": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Asset Upload",
                "description": "Creates an asset upload and returns newly created asset information.",
                "operationId": "Assets_CreateUpload",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Request with asset title, size, id.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateAssetRequest"
                        }
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/NewAssetInfoDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "An asset was not found.",
                        "schema": {
                            "$ref": "#/definitions/NewAssetInfoDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/undeleteValidate": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Validate Asset Deletion Rollback",
                "description": "Check whether assets can be undeleted or not.",
                "operationId": "Assets_AssetUndeleteValidate",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "validationParameters",
                        "in": "body",
                        "description": "The validation metadata used for validation.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UndeleteValidationParameters"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UndeleteValidationResultDto"
                            }
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "409": {
                        "description": "Conflict has occurred. "
                    }
                }
            }
        },
        "/assets/{assetId}/{metadataType}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset Metadata",
                "description": "Retrieve meta data for an asset.",
                "operationId": "Assets_GetMetadataAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "metadataType",
                        "in": "path",
                        "description": "Specify which type of information is being requested.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "List of records representing the meta data requested.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PropertyValueMappingDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The asset was not found, or the Metadata is not supported."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/autotags": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset Autotags",
                "description": "Retrieves autotags associated with specified asset.",
                "operationId": "Assets_GetAutotagsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetAutotagsInfo"
                        }
                    },
                    "404": {
                        "description": "An asset was not found."
                    }
                }
            }
        },
        "/assets/{assetId}/autotags/{autotag}": {
            "delete": {
                "tags": [
                    "Assets"
                ],
                "summary": "Remove Asset Autotag",
                "description": "Removes autotag from an asset.",
                "operationId": "Assets_RemoveAutotag",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "autotag",
                        "in": "path",
                        "description": "The autotag.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/autotags/keywords": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Keywords And Associate With Asset [Cognitive]",
                "description": "Creates one or more keywords in the default Cognitive Keyword Group,\r\nand assigns the keyword to the asset specified in the URL.",
                "operationId": "Assets_AttachAutotagsKeywordAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "keywords",
                        "in": "body",
                        "description": "List of keywords to be created and assigned to the asset.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeywordDto"
                            }
                        }
                    },
                    "404": {
                        "description": "An asset was not found."
                    }
                }
            }
        },
        "/assets/{assetId}/rating": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Asset Rating",
                "description": "Sets rating for asset.",
                "operationId": "Assets_AttachUserRatingToAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userRating",
                        "in": "body",
                        "description": "The asset rating.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserRating"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/AssetDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Assets"
                ],
                "summary": "Remove Asset Rating",
                "description": "Removes rating from an asset.",
                "operationId": "Assets_DetachUserRatingFromAsset",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/AssetDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/viewed": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create View Count Increment For Asset",
                "description": "Increments view count for asset.",
                "operationId": "Assets_ViewAsset",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "202": {
                        "description": "Request was accepted."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/comments": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset Comments",
                "description": "Retrieves asset comments.",
                "operationId": "Assets_GetCommentsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommentDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Asset Comments",
                "description": "Adds comments to the asset.",
                "operationId": "Assets_AddCommentsToAssetAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "comments",
                        "in": "body",
                        "description": "The collection of comments.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The comment was successfully created."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/history": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset History",
                "description": "Retrieves asset history.",
                "operationId": "Assets_GetHistoryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssetHistoryDetailDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/versions": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Media File Versions",
                "description": "Gets an asset's media file versions.",
                "operationId": "Assets_GetMediaFileVersionsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A response message containing a payload of the asset's media file versions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssetDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/renditions/{renditionKindId}": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset Renditions By Kind",
                "description": "Retrieves an asset's renditions.",
                "operationId": "Assets_GetAssetRenditionByRenditionKindIdAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "renditionKindId",
                        "in": "path",
                        "description": "The rendition kind id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A response message containing a payload of AssetRenditionDto.",
                        "schema": {
                            "$ref": "#/definitions/AssetRenditionDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The asset rendition was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/renditions": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Asset Renditions",
                "description": "Retrieves an asset's renditions.",
                "operationId": "Assets_GetAssetRenditionsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset ID.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A response message containing a payload of AssetRenditionDtos.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssetRenditionKindDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/downloaded": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Report Downloaded Asset",
                "description": "Reports that the asset was downloaded.",
                "operationId": "Assets_DownloadedAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/videoIntelligence/analyze": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Video Intelligence Analysis",
                "description": "Create the video intelligence analysis.",
                "operationId": "Assets_VideoIntelligenceAnalyzeAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "billing",
                        "in": "body",
                        "description": "The video intelligence billing type.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/VideoIntelligenceAnalysisStatusDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "402": {
                        "description": "The request failed due to payment issues."
                    },
                    "404": {
                        "description": "An asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/videoIntelligence/status": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Video Intelligence Status",
                "description": "Retrieve video intelligence analysis status for an asset.",
                "operationId": "Assets_VideoIntelligenceAnalysisStatusAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/VideoIntelligenceAnalysisStatusDto"
                        }
                    },
                    "404": {
                        "description": "An asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/videoIntelligence/insightsupdated": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Intelligence Analysis Insight",
                "description": "Create video intelligence analysis for an asset.",
                "operationId": "Assets_VideoIntelligenceInsightsUpdatedAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "404": {
                        "description": "An asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/videoIntelligence/token": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Video Indexer Subscription",
                "description": "Retrieves video indexer subscription metadata for an asset.",
                "operationId": "Assets_VideoIntelligenceAnalysisTokenAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "allowEdit",
                        "in": "query",
                        "description": "The boolean indicating whether edit is allowed or not.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/VideoIndexerSubscriptionDto"
                        }
                    },
                    "404": {
                        "description": "The video intelligence was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/videoIntelligence/insights": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Video Intelligence Result",
                "description": "Retrieves video intelligence insights for an asset.",
                "operationId": "Assets_GetVideoIntelligenceInsightsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/VideoIntelligenceAnalysisResultDto"
                        }
                    },
                    "404": {
                        "description": "The video intelligence was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/assets/{assetId}/videoIntelligence/keywords": {
            "post": {
                "tags": [
                    "Assets"
                ],
                "summary": "Create Keywords And Associate With Asset [Audio And Video]",
                "description": "Creates one or more keywords in the default Audio and Video Keyword Group and assigns the keyword to the asset specified in the URL.",
                "operationId": "Assets_AttachVideoIntelligenceKeywordAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "keywords",
                        "in": "body",
                        "description": "List of keywords to be created and assigned to the asset.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeywordDto"
                            }
                        }
                    },
                    "404": {
                        "description": "An asset was not found."
                    }
                }
            }
        },
        "/assets/videoIntelligence/limits": {
            "get": {
                "tags": [
                    "Assets"
                ],
                "summary": "Retrieve Video Intelligence Limits",
                "description": "Retrieves video intelligence limits and usage information.",
                "operationId": "Assets_GetVideoIntelligenceLimitsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/VideoIntelligenceLimitsDto"
                        }
                    },
                    "404": {
                        "description": "The video intelligence was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/attributes": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Retrieve Attributes",
                "description": "Retrieve attributes from a library.",
                "operationId": "Attributes_GetAttributes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AttributeDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Create Attribute",
                "description": "Create a attribute in a library.",
                "operationId": "Attributes_AddAttributeToLibrary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "attribute",
                        "in": "body",
                        "description": "The attribute request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AttributeDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "The Attribute was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/AttributeDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/attributes/{attributeId}": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Retrieve Attribute By ID",
                "description": "Retrieve attributes in a library by attribute id.",
                "operationId": "Attributes_GetAttributeById",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeId",
                        "in": "path",
                        "description": "The attribute id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AttributeDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "put": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Update Attributes",
                "description": "Update attributes in a library.",
                "operationId": "Attributes_UpdateAttribute",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeId",
                        "in": "path",
                        "description": "The attribute id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "attribute",
                        "in": "body",
                        "description": "An attribute",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AttributeDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AttributeDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Remove Attribute",
                "description": "Removes attribute in a library.",
                "operationId": "Attributes_DeleteAttributeFromLibrary",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "attributeId",
                        "in": "path",
                        "description": "The attribute id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/attributes/attributeDataType": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Retrieve Attributes Data Types",
                "description": "Returns attributes data types.",
                "operationId": "Attributes_GetAttributeDataTypes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GenericNameValueDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/attributes/embeddedDataType": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Retrieve Attributes Embedded Data Types",
                "description": "Returns an embedded attribute data types.",
                "operationId": "Attributes_GetEmbeddedDataTypes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GenericNameValueDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/attributes/embeddedDataMappingType": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Retrieve Attributes Embedded Data Mapping Types",
                "description": "Returns an of embedded attribute data mapping types.",
                "operationId": "Attributes_GetEmbeddedDataMappingTypes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/GenericNameValueDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/attributes/{dataTypeValue}/embeddedDataValue": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Retrieve Attributes Embedded Data Values",
                "description": "Returns an embedded attribute data values.",
                "operationId": "Attributes_GetEmbeddedDataTypeValues",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "dataTypeValue",
                        "in": "path",
                        "description": "A Data Type Value",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "File",
                            "Exif",
                            "Iptc",
                            "Xmp",
                            "Photoshop",
                            "IccProfile",
                            "Composite",
                            "OrgMetaData",
                            "Other",
                            "Xml",
                            "Zip",
                            "Microsoft",
                            "Pdf",
                            "FlashPix",
                            "Colors",
                            "Text",
                            "Tags"
                        ]
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EmbeddedDataValueObjectDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/attributes/cascadingAttributes": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Retrieve Cascading Attributes",
                "description": "Returns an cascading attributes.",
                "operationId": "Attributes_GetCascadingAttributes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/CascadingAttributesDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Branded Portals",
                "description": "Returns branded portals.",
                "operationId": "BrandedPortals_GetBrandedPortals",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrandedPortalDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Create Branded Portal",
                "description": "Creates a branded portal.",
                "operationId": "BrandedPortals_CreateBrandedPortal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalPostDetail",
                        "in": "body",
                        "description": "Branded portal post details request.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalPostDetail"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The branded portal was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "409": {
                        "description": "Conflict has occurred. Either duplicate name or url."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/duplicate": {
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Create Duplicate Branded Portal",
                "description": "Duplicates a branded portal.",
                "operationId": "BrandedPortals_DuplicateBrandedPortal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalDuplicatePostDetail",
                        "in": "body",
                        "description": "Branded portal post details request.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDuplicatePostDetail"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The branded portal was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "409": {
                        "description": "Conflict has occurred. Either duplicate name or url."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Branded Portal",
                "description": "Returns a branded portal by branded portal id.",
                "operationId": "BrandedPortals_GetBrandedPortal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "404": {
                        "description": "A branded portal was not found. "
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Remove Branded Portal",
                "description": "Remove a branded portal by branded portal id.",
                "operationId": "BrandedPortals_DeleteBrandedPortal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful Response is null."
                    },
                    "404": {
                        "description": "The branded portal was not found by the branded portal id given."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/layout": {
            "put": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Update Branded Portal",
                "description": "Update the branded portal page layout.",
                "operationId": "BrandedPortals_UpdateBrandedPortalPageLayout",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "pageLayout",
                        "in": "body",
                        "description": "The branded portal page layout.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "A branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/name": {
            "put": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Update Branded Portal Name",
                "description": "Update the branded portal name.",
                "operationId": "BrandedPortals_UpdateBrandedPortalName",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "name",
                        "in": "body",
                        "description": "The branded portal name.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "A branded portal was not found."
                    },
                    "409": {
                        "description": "Conflict has occurred. Duplicate branded portal."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/settings/download": {
            "put": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Update Branded Portal Download Settings",
                "description": "Update download settings for a branded portal.",
                "operationId": "BrandedPortals_UpdateBrandedPortalDownloadSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "downloadSettings",
                        "in": "body",
                        "description": "The download settings.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DownloadSettingsDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The download setting was null."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/settings/url": {
            "put": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Update Branded Portal URL Settings",
                "description": "Update the URL settings for a branded portal.",
                "operationId": "BrandedPortals_UpdateBrandedPortalUrlSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "urlSettings",
                        "in": "body",
                        "description": "The URL settings.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UrlSettingsDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "A branded portal was not found."
                    },
                    "409": {
                        "description": "Conflict has occurred. Duplicate portal url."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/settings/navigation": {
            "put": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Update Branded Portal Navigation Settings",
                "description": "Update navigation for a branded portal.",
                "operationId": "BrandedPortals_UpdateBrandedPortalNavigationSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "navigationSettings",
                        "in": "body",
                        "description": "The branded portal navigation settings.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NavigationSettingsDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request. The navigation settings were null."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/settings/search": {
            "put": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Update Branded Portal Search Settings",
                "description": "Update the search settings for branded portal.",
                "operationId": "BrandedPortals_UpdateBrandedPortalSearchSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "searchSettings",
                        "in": "body",
                        "description": "The search settings.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchSettingsDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request. Search settings is null."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/settings/restrictaccess": {
            "put": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Update Branded Portal Access Settings",
                "description": "Update the restricted access settings for branded portal.",
                "operationId": "BrandedPortals_UpdateBrandedPortalRestrictAccessSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "restrictAccessSettings",
                        "in": "body",
                        "description": "The restricted access settings.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RestrictAccessSettingsDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request. Restricted access settings is null."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/settings/highlightcolour": {
            "put": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Update Branded Portal Highlight Colour",
                "description": "Update highlight colour for a branded portal.",
                "operationId": "BrandedPortals_UpdateBrandedPortalHighlightColourSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "highlightColourSettings",
                        "in": "body",
                        "description": "The highlight color settings.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HighlightColourSettingsDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request. Highlight colour settings is null."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/settings/language": {
            "put": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Update Branded Portal Language Settings",
                "description": "Update language settings for a branded portal.",
                "operationId": "BrandedPortals_UpdateBrandedPortalLanguageSettings",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "languageSettings",
                        "in": "body",
                        "description": "The language settings.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LanguageSettingsDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/settings/accesskey": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Branded Portal Access Key",
                "description": "Returns a branded portal access key.",
                "operationId": "BrandedPortals_GetBrandedPortalAccessKey",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/{sectionId}/assets": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Branded Portal Draft Assets",
                "description": "Returns draft assets in a branded portal.",
                "operationId": "BrandedPortals_GetDraftBrandedPortalAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "preview",
                        "in": "query",
                        "description": "The flag used to show fully ingested assets.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalFolderDto"
                        }
                    },
                    "404": {
                        "description": "A branded portal was not found. "
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Create Assets In Branded Portal Section",
                "description": "Adds assets too a branded portal section.",
                "operationId": "BrandedPortals_AddAssetsToBrandedPortalSection",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetIds",
                        "in": "body",
                        "description": "Collection of asset id’s.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful Response is null."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Remove Assets Form A Branded Portal Section",
                "description": "Remove assets form a branded portal section.",
                "operationId": "BrandedPortals_RemoveAssetsFromBrandedPortalSection",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetIds",
                        "in": "body",
                        "description": "Collection of asset id’s.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful Response is null."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/assets": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Search Branded Portal Draft Assets",
                "description": "Returns search results from branded portal draft assets.",
                "operationId": "BrandedPortals_SearchDraftBrandedPortalAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "preview",
                        "in": "query",
                        "description": "The flag used to show fully ingested assets.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalFolderDto"
                        }
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Remove Assets Form A Branded Portal.",
                "description": "Remove assets form a branded portal.",
                "operationId": "BrandedPortals_RemoveAssetsFromBrandedPortal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetIds",
                        "in": "body",
                        "description": "Collection of asset id’s.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful Response is null."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/move/assets": {
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Move Assets To A Branded Portal Section",
                "description": "Move assets to a branded portal section.",
                "operationId": "BrandedPortals_MoveAssetsToBrandedPortalSection",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "moveAssetsRequest",
                        "in": "body",
                        "description": "A move asset request.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalMoveAssetsRequest"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful Response is null."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/validate/assets": {
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Validate Assets In All Branded Portals",
                "description": "Validates assets in all branded portal.",
                "operationId": "BrandedPortals_ValidateAssetsInAllBrandedPortals",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetIds",
                        "in": "body",
                        "description": "Collection of asset id’s.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/validate/assets": {
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Validate Assets In A Branded Portal",
                "description": "Validate assets in a branded portal.",
                "operationId": "BrandedPortals_ValidateAssetsInBrandedPortal",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetIds",
                        "in": "body",
                        "description": "Collection of asset id’s.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrandedPortalAssetValidationResultDto"
                            }
                        }
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/{sectionId}/sync": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Get branded portal section sync details",
                "description": "Return branded portal section sync details",
                "operationId": "BrandedPortals_GetSyncedBrandedPortalSection",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalSectionSyncDetailsDto"
                        }
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Create section sync",
                "description": "Sync Branded Portal section.",
                "operationId": "BrandedPortals_SyncBrandedPortalSection",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalSectionSyncPostDetail",
                        "in": "body",
                        "description": "Sync details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalSectionSyncPostDetail"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful Response is null."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/{sectionId}/unsync": {
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Remove section sync",
                "description": "Unsync Branded Portal section.",
                "operationId": "BrandedPortals_UnsyncBrandedPortalSection",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalSectionSyncPostDetail",
                        "in": "body",
                        "description": "Sync details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalSectionSyncPostDetail"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful Response is null."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/publish": {
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Publish Branded Portal",
                "description": "Publish branded portal.",
                "operationId": "BrandedPortals_PublishBrandedPortal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "409": {
                        "description": "Conflict has occurred. Branded portal URL already exists."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/disable": {
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Disable Branded Portal",
                "description": "Disable branded portal.",
                "operationId": "BrandedPortals_DisableBrandedPortal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDetailsDto"
                        }
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/brandedportals/{host}/{path}/authorize": {
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Authorize Branded Portal Access",
                "description": "Authorize access for branded portal.",
                "operationId": "BrandedPortals_AuthorizeBrandedPortalAccess",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "host",
                        "in": "path",
                        "description": "The branded portal library domain name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "path",
                        "description": "The branded portal name in URL path.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "accessKey",
                        "in": "body",
                        "description": "The branded portal access key.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/brandedportals/{host}/{path}": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Live Branded Portal",
                "description": "Returns a live branded portal.",
                "operationId": "BrandedPortals_GetLiveBrandedPortal",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "host",
                        "in": "path",
                        "description": "The branded portal library domain name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "path",
                        "in": "path",
                        "description": "The branded portal name in URL path.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PublicBrandedPortalDetailsDto"
                        }
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/{libraryId}/brandedportals/{brandedPortalId}/{sectionId}/assets": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Assets Form A Live Branded Portal",
                "description": "Returns assets form a live branded portal.",
                "operationId": "BrandedPortals_GetLiveBrandedPortalAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "The library id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PublicBrandedPortalFolderDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/{libraryId}/brandedportals/{brandedPortalId}/renditionKinds": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieves Branded Portal Asset Rendition Types",
                "description": "Retrieves all the rendition types available for the given Branded Portal.",
                "operationId": "BrandedPortals_GetLiveBrandedPortalRenditionKinds",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "The library id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RenditionKindDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/{libraryId}/brandedportals/{brandedPortalId}/assets/{assetId}/renditions/{renditionKindId}": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Branded Portals Asset Rendition",
                "description": "Retrieves a specific rendition for a given published Branded Portal asset.",
                "operationId": "BrandedPortals_GetLiveBrandedPortalAssetRendition",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "The library id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "renditionKindId",
                        "in": "path",
                        "description": "The specific rendition kind id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetRenditionDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The asset rendition was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/{libraryId}/brandedportals/{brandedPortalId}/assets": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Search A Live Branded Portal",
                "description": "Returns search results for a live branded portal.",
                "operationId": "BrandedPortals_SearchLiveBrandedPortalAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "The library id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PublicBrandedPortalFolderDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/brandedportals/{host}/termsAndConditions": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Branded Portal Terms and Conditions",
                "description": "Returns the terms and condititons of a branded portal.",
                "operationId": "BrandedPortals_BrandedPortalGetTermsAndConditions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "host",
                        "in": "path",
                        "description": "The branded portal library domain name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PublicBrandedPortalTermsAndConditionsDto"
                        }
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/{libraryId}/brandedportals/{brandedPortalId}/downloads": {
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Create A Download Live Branded Portal Assets",
                "description": "Returns a live branded portal assets.",
                "operationId": "BrandedPortals_CreateDownloadLiveBrandedPortalAssets",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "The library id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalDownloadRequest",
                        "in": "body",
                        "description": "A branded portal download request.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDownloadRequest"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalDownloadDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/{libraryId}/brandedportals/{brandedPortalId}/downloads/{downloadId}": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Live Branded Portal Assets",
                "description": "Retrieve a live branded portal assets.",
                "operationId": "BrandedPortals_DownloadLiveBrandedPortalAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "The library id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "downloadId",
                        "in": "path",
                        "description": "The download id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/assets": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Search Branded Portal Assets",
                "description": "Returns assets form a search results in a branded portal.",
                "operationId": "BrandedPortals_BrandedPortalSearchAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalFolderDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/categories/{categoryId}/assets": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Branded Portal Assets By CategoryId",
                "description": "Returns a collection of assets by categoryId in a branded portal.",
                "operationId": "BrandedPortals_BrandedPortalGetAssetsByCategoryId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The id of the category.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalFolderDto"
                        }
                    },
                    "403": {
                        "description": "Server refused the request."
                    },
                    "404": {
                        "description": "The category was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/lightboxes/{lightboxId}/assets": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Branded Portal Assets By LightboxId",
                "description": "Returns a collection of asset by lightboxId in a branded portal.",
                "operationId": "BrandedPortals_BrandedPortalGetAssetsByLightboxId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalFolderDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this lightbox."
                    },
                    "404": {
                        "description": "The lightbox was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/brandedportals/{brandedPortalId}/sections/{sectionId}/uploads": {
            "get": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Retrieve Branded Portal Upload Section Details",
                "description": "Return branded portal upload section details",
                "operationId": "BrandedPortals_BrandedPortalGetUploadSection",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalUploadSectionDto"
                        }
                    },
                    "404": {
                        "description": "The branded portal or upload section was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "put": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Update Branded Portal Upload Section",
                "description": "Update a branded portal upload section by branded portal id and upload section id.",
                "operationId": "BrandedPortals_UpdateBrandedPortalUploadSection",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The upload section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalUploadSectionPostDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalUploadSectionPostDetail"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful Response is null."
                    },
                    "404": {
                        "description": "The branded portal was not found by the branded portal id given."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Create Branded Portal Upload Section",
                "description": "Create branded portal upload section.",
                "operationId": "BrandedPortals_CreateBrandedPortalUploadSection",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "brandedPortalUploadSectionPostDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BrandedPortalUploadSectionPostDetail"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful. Response is null."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "The branded portal was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "BrandedPortals"
                ],
                "summary": "Remove Branded Portal Upload Section",
                "description": "Remove a branded portal upload section by branded portal id and upload section id.",
                "operationId": "BrandedPortals_DeleteBrandedPortalUploadSection",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "brandedPortalId",
                        "in": "path",
                        "description": "The branded portal id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "sectionId",
                        "in": "path",
                        "description": "The upload section id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful Response is null."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "The branded portal was not found by the branded portal id given."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/folders": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve Root Categories",
                "description": "Returns list of root categories for the library.",
                "operationId": "Categories_ReturnListOfRootCategories",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "includePinnedSearches",
                        "in": "query",
                        "description": "The boolean indicator to include pinned saved searches.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FolderDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create Category",
                "description": "Creates a category in the library.",
                "operationId": "Categories_CreateFolderAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryPostDto",
                        "in": "body",
                        "description": "The new category details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoryPostDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The category was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/FolderDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to execute this operation."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve Categories",
                "description": "Returns list of categories for the library.",
                "operationId": "Categories_ReturnAllCategories",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create Category",
                "description": "Creates a category in the library.",
                "operationId": "Categories_CreateCategoryAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryPostDto",
                        "in": "body",
                        "description": "The new category details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoryPostDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The category was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/FolderDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to execute this operation."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/permissionSets": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create Permission Set",
                "description": "Creates a permission set in the library.",
                "operationId": "Categories_CreatePermissionSetAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "permissionSetPostDto",
                        "in": "body",
                        "description": "The new permission set details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PermissionSetDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The permission set was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/PermissionSetDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/folders/{categoryId}": {
            "patch": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update Category",
                "description": "Updates a category in a library by renaming or moving its parent category.",
                "operationId": "Categories_PatchFolderAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The guid of the category being updated.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "A series of update operations to be performed on the category.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/FolderDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to execute this operation."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/{categoryId}": {
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Remove Category",
                "description": "Deletes a category in the library.",
                "operationId": "Categories_DeleteCategoryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The guid of the category being deleted.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to execute this operation."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update Category",
                "description": "Updates a category in a library by renaming or moving its parent category.",
                "operationId": "Categories_PatchCategoryAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The guid of the category being updated.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "A series of update operations to be performed on the category.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/FolderDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to execute this operation."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/{categoryId}/userGroups/{userGroupId}": {
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Remove User Group From Category",
                "description": "Unassign the user group permissions from a category.",
                "operationId": "Categories_UnassignUserGroupFromCategoryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The category id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "The user group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to execute this operation."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/{categoryId}/userGroups": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create User Group Association With Category",
                "description": "Assigns the user group to a category.",
                "operationId": "Categories_AssignUserGroupToCategoryAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "Guid of the category to which we are assigning user group.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryUserGroup",
                        "in": "body",
                        "description": "User group being assigned to category.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CategoryUserGroupDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to execute this operation."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/folders/{categoryGuid}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve Category",
                "description": "Returns detailed information on a specific category based on guid.",
                "operationId": "Categories_ReturnFolderDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryGuid",
                        "in": "path",
                        "description": "The category guid.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/FolderDto"
                        }
                    },
                    "404": {
                        "description": "The category was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/{categoryGuid}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve Category",
                "description": "Returns detailed information on a specific category based on guid.",
                "operationId": "Categories_ReturnCategoryDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryGuid",
                        "in": "path",
                        "description": "The category guid.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/FolderDto"
                        }
                    },
                    "404": {
                        "description": "The category was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/folders/{categoryGuid}/subfolders": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve Sub Categories",
                "description": "Returns list of subcategories based on parent category guid.",
                "operationId": "Categories_ReturnSubfoldersInCategory",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryGuid",
                        "in": "path",
                        "description": "Parent category guid.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryFeatures",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FolderDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/{categoryGuid}/subcategories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve Sub Categories",
                "description": "Returns list of subcategories based on parent category guid.",
                "operationId": "Categories_ReturnSubcategoriesInCategory",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryGuid",
                        "in": "path",
                        "description": "Parent category guid.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryFeatures",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/{categoryId}/assets": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve Category Assets",
                "description": "Returns assets that belongs to the specified category.",
                "operationId": "Categories_GetAssetsByCategoryId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The category guid.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetsResultDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/subcategories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve Root Sub Categories",
                "description": "Returns the sub categories that belongs to the specified category.",
                "operationId": "Categories_SubCategories",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryFeatures",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CategoryDto"
                            }
                        }
                    },
                    "204": {
                        "description": "A category was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/{categoryId}/features": {
            "patch": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update Category Features",
                "description": "Updates the category features with a list of patch operations.",
                "operationId": "Categories_PatchCategoryFeaturesAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "The category guid.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "The list of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/CategoryFeatureDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to execute this operation."
                    },
                    "404": {
                        "description": "The category was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/config/renditionkinds": {
            "get": {
                "tags": [
                    "Config"
                ],
                "summary": "Retrieve Rendition Kinds",
                "description": "Retrieves the supported rendition kinds.",
                "operationId": "Config_GetSupportedRenditionKinds",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RenditionKindDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/crop/{assetId}": {
            "post": {
                "tags": [
                    "Crop"
                ],
                "summary": "Create Crop",
                "description": "Create a crop image for an asset.",
                "operationId": "Crop_CropImageAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cropPostDetail",
                        "in": "body",
                        "description": "The crop request details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CropPostDetail"
                        }
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/cropWithTemplate/{assetId}": {
            "post": {
                "tags": [
                    "Crop"
                ],
                "summary": "Create Crop From Template",
                "description": "Create a crop image for an asset using a crop template.",
                "operationId": "Crop_CropImageWithTemplateAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cropWithTemplatePostDetail",
                        "in": "body",
                        "description": "The crop template details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CropWithTemplatePostDetail"
                        }
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/crop/{cropId}": {
            "get": {
                "tags": [
                    "Crop"
                ],
                "summary": "Retrieve Crop",
                "description": "Retrieve the crop image url.",
                "operationId": "Crop_GetCrop",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cropId",
                        "in": "path",
                        "description": "The crop id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/CropDetailsDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The crop was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/crop/predefinedTemplates": {
            "get": {
                "tags": [
                    "Crop"
                ],
                "summary": "Retrieve Predefined Crop Templates",
                "description": "Retrieve predefined crop templates.",
                "operationId": "Crop_GetPredefinedCropTemplatesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PredefinedCropTemplateDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/crop/templates": {
            "get": {
                "tags": [
                    "Crop"
                ],
                "summary": "Retrieve Crop Templates",
                "description": "Retrieve crop templates.",
                "operationId": "Crop_GetCropTemplatesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CropTemplateDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Crop"
                ],
                "summary": "Create Crop Template",
                "description": "Create crop template.",
                "operationId": "Crop_CreateCropTemplateAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cropTemplateDto",
                        "in": "body",
                        "description": "The crop template details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CropTemplateDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "The crop template was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/CropTemplateDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "The crop template was not found."
                    },
                    "409": {
                        "description": "Crop template with the same id or the same name, x and y already exists."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/crop/templates/{cropTemplateId}": {
            "put": {
                "tags": [
                    "Crop"
                ],
                "summary": "Update Crop Template",
                "description": "Update crop template.",
                "operationId": "Crop_UpdateCropTemplateAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cropTemplateId",
                        "in": "path",
                        "description": "The crop template id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "cropTemplateDto",
                        "in": "body",
                        "description": "The crop template details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CropTemplateDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/CropTemplateDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "The crop template was not found."
                    },
                    "409": {
                        "description": "Crop template with the same id or the same name, x and y already exists."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Crop"
                ],
                "summary": "Remove Crop Template",
                "description": "Remove crop template.",
                "operationId": "Crop_DeleteCropTemplateAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cropTemplateId",
                        "in": "path",
                        "description": "The crop template id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "204": {
                        "description": "The crop template was removed."
                    },
                    "404": {
                        "description": "The crop template was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/directlinks/{assetId}": {
            "get": {
                "tags": [
                    "DirectLinks"
                ],
                "summary": "Retrieve Direct Links",
                "description": "Returns a collection of direct links.",
                "operationId": "DirectLinks_GetDirectLinks",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "includeSoftDeleted",
                        "in": "query",
                        "description": "Allow soft deleted assets if permissible.",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DirectLinkDetailDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "DirectLinks"
                ],
                "summary": "Create A Direct Link",
                "description": "Generates a direct link for an orginal or renditions.",
                "operationId": "DirectLinks_GenerateDirectLink",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "generateDirectLinkPostDetail",
                        "in": "body",
                        "description": "Generate direct link request.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GenerateDirectLinkPostDetail"
                        }
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The direct link was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/DirectLinkDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The asset was not found. "
                    },
                    "409": {
                        "description": "Conflict has occurred. "
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/directlinks/{assetId}/validate": {
            "post": {
                "tags": [
                    "DirectLinks"
                ],
                "summary": "Validate a Direct Link",
                "description": "Validate a direct link.",
                "operationId": "DirectLinks_ValidateDirectLink",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "linkName",
                        "in": "query",
                        "description": "The link name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request. Link name is invalid."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The asset was not found."
                    },
                    "409": {
                        "description": "Conflict has occurred. Link name is not unique."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/directlinks/validate/assets": {
            "post": {
                "tags": [
                    "DirectLinks"
                ],
                "summary": "Validate Asset In All Direct Links",
                "description": "Validate assets in all direct links.",
                "operationId": "DirectLinks_ValidateAssetsInAllDirectLinks",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetIds",
                        "in": "body",
                        "description": "Collection of asset id’s.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    "404": {
                        "description": "The asset was not found. "
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/directLinks/{assetId}/activate/{directLinkId}": {
            "put": {
                "tags": [
                    "DirectLinks"
                ],
                "summary": "Activate Direct Link",
                "description": "Activate direct link.",
                "operationId": "DirectLinks_ActivateDirectLink",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "directLinkId",
                        "in": "path",
                        "description": "The directlink id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The direct link was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/DirectLinkDetailDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The direct link for Asset does not exist."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/directLinks/{assetId}/deactivate/{directLinkId}": {
            "put": {
                "tags": [
                    "DirectLinks"
                ],
                "summary": "Deactivate Direct Link",
                "description": "Deactivate direct link.",
                "operationId": "DirectLinks_DeactivateDirectLink",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "directLinkId",
                        "in": "path",
                        "description": "The directlink id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The direct link was successfully deactivated.",
                        "schema": {
                            "$ref": "#/definitions/DirectLinkDetailDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The direct link for Asset does not exist."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/directLinks/{assetId}/deactivateAll": {
            "put": {
                "tags": [
                    "DirectLinks"
                ],
                "summary": "Deactivate All Direct Links",
                "description": "Deactivate all direct links.",
                "operationId": "DirectLinks_DeactivateAllDirectLinks",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "directLinkIds",
                        "in": "body",
                        "description": "Collection of directlink id’s.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "All direct links were successfully deactivated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DirectLinkDetailDto"
                            }
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The direct link for Asset does not exist."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/directLinks/{assetId}/activateAll": {
            "put": {
                "tags": [
                    "DirectLinks"
                ],
                "summary": "Activate All Direct Links",
                "description": "Activate all direct links.",
                "operationId": "DirectLinks_ActivateAllDirectLinks",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "directLinkIds",
                        "in": "body",
                        "description": "Collection of directlink id’s.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "All direct links were successfully activated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DirectLinkDetailDto"
                            }
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The direct link for Asset does not exist."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/directLinks/{assetId}/archive/{directLinkId}": {
            "put": {
                "tags": [
                    "DirectLinks"
                ],
                "summary": "Archive Direct Link",
                "description": "Archive direct link.",
                "operationId": "DirectLinks_ArchiveDirectLink",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "directLinkId",
                        "in": "path",
                        "description": "The directlink id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The direct link was successfully archived.",
                        "schema": {
                            "$ref": "#/definitions/DirectLinkDetailDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The direct link for Asset does not exist."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/directlinks/export": {
            "get": {
                "tags": [
                    "DirectLinks"
                ],
                "summary": "Retrieve Direct Links",
                "description": "Returns a zip file of collection of direct links.",
                "operationId": "DirectLinks_ExportDirectLinks",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "format": "byte",
                            "type": "string"
                        }
                    },
                    "204": {
                        "description": "Library does not contain direct link"
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/downloads": {
            "get": {
                "tags": [
                    "Downloads"
                ],
                "summary": "Retrieve Downloads",
                "description": "Returns a collection of all downloads.",
                "operationId": "Downloads_ListAllDownloadsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/DownloadStatusesDto"
                        }
                    },
                    "401": {
                        "description": "The request failed because of a problem on the server."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Downloads"
                ],
                "summary": "Create Download By Id",
                "description": "Creates a new download.",
                "operationId": "Downloads_CreateDownloadAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "downloadSettingsCustomPostDetail",
                        "in": "body",
                        "description": "Download custom setting details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DownloadSettingsCustomPostDetail"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/CreateDownloadResponseDetail"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/downloads/{id}": {
            "get": {
                "tags": [
                    "Downloads"
                ],
                "summary": "Retrieve Download Detailed Information",
                "description": "Retrieve detailed information for a specific download.",
                "operationId": "Downloads_GetDownloadStatusByIdAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the download.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/DownloadStatusDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The download was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Downloads"
                ],
                "summary": "Create A New Download By Id",
                "description": "Creates a new download by id.",
                "operationId": "Downloads_CreateDownloadByIdAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "downloadSettingsCustomPostDetail",
                        "in": "body",
                        "description": "Download custom setting details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DownloadSettingsCustomPostDetail"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The download id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/CustomDownloadFormValidationDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Downloads"
                ],
                "summary": "Remove Download",
                "description": "Remove a specific download by download id.",
                "operationId": "Downloads_DeleteDownloadByIdAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the download.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The download was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/downloads/{id}/asset": {
            "post": {
                "tags": [
                    "Downloads"
                ],
                "summary": "Create Single Asset Download",
                "description": "Create a single asset download by id.",
                "operationId": "Downloads_CreateSingleAssetDownloadByIdAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "downloadAssetCustomPostDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DownloadAssetCustomPostDetail"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The download id",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/CustomDownloadFormValidationDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/downloads/validate": {
            "post": {
                "tags": [
                    "Downloads"
                ],
                "summary": "Validate Download",
                "description": "Validate a download.",
                "operationId": "Downloads_ValidateDownload",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "downloadValidationParameters",
                        "in": "body",
                        "description": "The download validation parameters.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DownloadValidationParameters"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/DownloadPolicyDetailsDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Retrieve Json Home Document",
                "description": "Retrieve a collection of endpoints that are available to authenticated user.",
                "operationId": "Home_ReturnListOfFunctions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JsonHomeDocument"
                        }
                    }
                }
            }
        },
        "/introductionAndHelp": {
            "get": {
                "tags": [
                    "IntroductionAndHelp"
                ],
                "summary": "Retrieve Introduction And Help",
                "description": "Returns assets that are used to help and introduce user to the DAM.",
                "operationId": "IntroductionAndHelp_GetIntroductionAndHelpAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/HelpAssetsResultDto"
                        }
                    }
                }
            }
        },
        "/keywordGroups": {
            "get": {
                "tags": [
                    "KeywordGroups"
                ],
                "summary": "Retrieve All Keyword Groups",
                "description": "Returns a collection of keyword groups.",
                "operationId": "KeywordGroups_ReturnKeywordGroups",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeywordGroupDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "KeywordGroups"
                ],
                "summary": "Create A Keyword Group",
                "description": "Creates a keyword group in the library.",
                "operationId": "KeywordGroups_CreateKeywordGroups",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "keywordGroup",
                        "in": "body",
                        "description": "The keyword group.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/KeywordGroupDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/KeywordGroupDto"
                        }
                    },
                    "409": {
                        "description": "Conflict has occurred. Group name already exist."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/keywordGroups/{keywordGroupId}/subGroups": {
            "get": {
                "tags": [
                    "KeywordGroups"
                ],
                "summary": "Retrieve Keyword Groups By Parent Keyword Group Id",
                "description": "Returns all keyword groups for the parent keyword group.",
                "operationId": "KeywordGroups_ReturnKeywordGroupsByParentKeywordGroupId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "keywordGroupId",
                        "in": "path",
                        "description": "The parent keyword group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeywordGroupDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/keywordGroups/{keywordGroupId}": {
            "delete": {
                "tags": [
                    "KeywordGroups"
                ],
                "summary": "Remove Keyword Group",
                "description": "Removes a keyword group from the library.",
                "operationId": "KeywordGroups_RemoveKeywordGroup",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "keywordGroupId",
                        "in": "path",
                        "description": "The keyword group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content, Request was successful Response is null."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "patch": {
                "tags": [
                    "KeywordGroups"
                ],
                "summary": "Update Keyword Group",
                "description": "Updates a keyword group in the library.",
                "operationId": "KeywordGroups_UpdateKeywordGroup",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "keywordGroupId",
                        "in": "path",
                        "description": "The keyword group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "The collection of update operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/KeywordGroupDto"
                        }
                    },
                    "409": {
                        "description": "Conflict has occurred."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/keywords/{keyword}": {
            "patch": {
                "tags": [
                    "Keywords"
                ],
                "summary": "Update Keyword",
                "description": "Update a keyword.",
                "operationId": "Keywords_UpdateKeyword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "path",
                        "description": "The keyword.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "The update operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/KeywordDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/keywords": {
            "get": {
                "tags": [
                    "Keywords"
                ],
                "summary": "Retrieve Keywords",
                "description": "Returns all keywords in library.",
                "operationId": "Keywords_ReturnKeywords",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was accepted.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KeywordDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Keywords"
                ],
                "summary": "Create Keyword",
                "description": "Creates a keyword in the library.",
                "operationId": "Keywords_CreateKeyword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "body",
                        "description": "The keyword.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/lightboxes": {
            "get": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Retrieve Lightboxes",
                "description": "Retrieves all lightboxes.",
                "operationId": "Lightbox_GetLightboxes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LightboxDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Create Lightbox",
                "description": "Creates a new lightbox.",
                "operationId": "Lightbox_CreateLightbox",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxPostDetailDto",
                        "in": "body",
                        "description": "The lightbox details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LightboxPostDetailDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/LightboxDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/lightboxes/lightboxesForApproval": {
            "get": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Retrieve Lightboxes For Approval",
                "description": "Retrieves list of lightboxes for approval.",
                "operationId": "Lightbox_GetApprovalBatches",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LightboxDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/lightboxes/{lightboxId}": {
            "get": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Retrieve Lightbox",
                "description": "Retrieves lightbox for a given lightbox id.",
                "operationId": "Lightbox_GetLightbox",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/LightboxDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The lightbox was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "put": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Update Lightbox",
                "description": "Updates the lightbox details.",
                "operationId": "Lightbox_UpdateLightboxDefinition",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "lightboxPostDetailDto",
                        "in": "body",
                        "description": "The lightbox details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LightboxPostDetailDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/LightboxDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Remove Lightbox",
                "description": "Removes a given lightbox id.",
                "operationId": "Lightbox_DeleteLightbox",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Update Lightbox",
                "description": "Update lightbox with a list of patch operations.",
                "operationId": "Lightbox_PatchLightbox",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/LightboxDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/lightboxes/{lightboxId}/assets": {
            "get": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Retrieve Lightbox Assets",
                "description": "Retrieves the assets for a given lightbox id.",
                "operationId": "Lightbox_GetLightboxAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetsResultDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The lightbox was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Create Lightbox Association With Assets",
                "description": "Add a set of assets to the lightbox.",
                "operationId": "Lightbox_AddAssetToLightbox",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetsIds",
                        "in": "body",
                        "description": "The collection of asset ids.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Remove Assets From Lightbox",
                "description": "Removes a set of assets from a given lightbox.",
                "operationId": "Lightbox_RemoveAssetsFromLightbox",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetsIds",
                        "in": "body",
                        "description": "The collection of asset ids.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "format": "uuid",
                                "type": "string",
                                "example": "00000000-0000-0000-0000-000000000000"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/lightboxes/lightboxesForApproval/{lightboxId}/assets": {
            "get": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Retrieve Assets From Lightbox For Approval",
                "description": "Retrieves the assets from a specific lightbox for approval.",
                "operationId": "Lightbox_GetApprovalBatchAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetsResultDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/lightboxes/{lightboxId}/assets/{assetId}": {
            "delete": {
                "tags": [
                    "Lightbox"
                ],
                "summary": "Remove Asset From Lightbox",
                "description": "Removes an asset from a given lightbox.",
                "operationId": "Lightbox_RemoveAssetFromLightbox",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/notification/videointelligence/trial-request": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Create Video Intelligence Trial Request",
                "description": "Starts a video intelligence trial.",
                "operationId": "Notification_VideoIntelligenceTrialRequestContactEmail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/notification": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "operationId": "Notification_SendNotificationAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "notificationPostDetail",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NotificationPostDetail"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/NotificationSendInfoDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/notification/usersandusergroups": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "operationId": "Notification_GetUsersAndUserGroups",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserAndUserGroupDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/organizationalUnits/{hostName}": {
            "get": {
                "tags": [
                    "OrgUnit"
                ],
                "summary": "Retrieve Org Unit Information",
                "description": "Retrieves org unit information based on hostname.",
                "operationId": "OrgUnit_GetOrgUnitByHostName",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "hostName",
                        "in": "path",
                        "description": "Domain name of host.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/LibraryLoginInfoDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/organizationalunits/current": {
            "get": {
                "tags": [
                    "OrgUnit"
                ],
                "summary": "Retrieve Current Org Unit Information",
                "description": "Retrieves detailed information for current organizational unit.",
                "operationId": "OrgUnit_RetrieveCurrentOrganizationalUnit",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/LibraryDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An organizational unit was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/organizationalunits/current/integrations/printui": {
            "get": {
                "tags": [
                    "OrgUnit"
                ],
                "summary": "Retrieve Print UI Credential For Current Org Unit",
                "description": "Retrieves print ui auth token and client ID for current organizational unit.",
                "operationId": "OrgUnit_RetrieveCurrentOrganizationalUnitPrintUIData",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PrintUICredsDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An organizational unit was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/organizationalunits/current/portals": {
            "get": {
                "tags": [
                    "OrgUnit"
                ],
                "summary": "Retrieves Portals Details For Current Org Unit",
                "description": "Retrieves information for portals of current organizational unit.",
                "operationId": "OrgUnit_RetrieveCurrentOrganizationalUnitPortalsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationalUnitPortalDetailDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An organizational unit was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/organizationalunits/{id}": {
            "get": {
                "tags": [
                    "OrgUnit"
                ],
                "summary": "Retrieve Org Unit Information By Id",
                "description": "Retrieves detailed information for a specific organizational unit.",
                "operationId": "OrgUnit_RetrieveOrganizationalUnitAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The id of the organizational unit.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/LibraryDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An organizational unit was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/organizationalunits/current/libraries": {
            "get": {
                "tags": [
                    "OrgUnit"
                ],
                "summary": "Retrieve Current Org Unit Libraries Information",
                "description": "Retrieves detailed information for current organizational unit libraries.",
                "operationId": "OrgUnit_RetrieveCurrentOrganizationalUnitLibrairesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LibraryDetailDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An organizational unit was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/organizationalunits/current/libraries/{id}": {
            "get": {
                "tags": [
                    "OrgUnit"
                ],
                "summary": "Retrieve Org Unit Library By Id",
                "description": "Retrieves an organizational unit library by Id.",
                "operationId": "OrgUnit_GetCurrentOrganizationalUnitLibraryByIdAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The identifier of getting organizational unit library.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/LibraryDetailDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An organizational unit was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/organizationalunits/current/libraries/{libraryId}": {
            "patch": {
                "tags": [
                    "OrgUnit"
                ],
                "summary": "Update Current Library's Root Category Name",
                "description": "Updates the library's root category name.",
                "operationId": "OrgUnit_PatchCurrentLibrary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "The library id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "The list of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/LibraryDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/organizationalUnits/{libraryId}": {
            "patch": {
                "tags": [
                    "OrgUnit"
                ],
                "summary": "Update Current Library Name",
                "description": "Updates the current library name.",
                "operationId": "OrgUnit_PatchLibrary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "The library id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "The list of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/LibraryDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/persons/{personId}": {
            "patch": {
                "tags": [
                    "Persons"
                ],
                "summary": "Update person name",
                "description": "Update person name.",
                "operationId": "Persons_PatchPersonAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "personId",
                        "in": "path",
                        "description": "The person id guid.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "patchOperations",
                        "in": "body",
                        "description": "List of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PersonDetailsDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/persons": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Retrieve Category Persons - Identified",
                "description": "Returns Identified Persons that belongs to the specified category.",
                "operationId": "Persons_GetPersonsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetsResultDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/persons/identified/search": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "operationId": "Persons_GetIdentifiedPersons",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchContext.filters",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchContext.count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "searchContext.offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "searchContext.orderBy",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchContext.containerFilter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchContext.searchTerm",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchContext.searchFields",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchContext.includeTotalCount",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "searchContext.includeSoftDeleted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PersonsResultDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Persons"
                ],
                "operationId": "Persons_GetIdentifiedPersons",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchContext",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchContext"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PersonsResultDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/persons/unidentified/search": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "operationId": "Persons_GetUnidentifiedPersons",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchContext.filters",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchContext.count",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "searchContext.offset",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "searchContext.orderBy",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchContext.containerFilter",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchContext.searchTerm",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchContext.searchFields",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "searchContext.includeTotalCount",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "searchContext.includeSoftDeleted",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PersonsResultDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Persons"
                ],
                "operationId": "Persons_GetUnidentifiedPersons",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "searchContext",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchContext"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PersonsResultDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/{categoryId}/persons": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "operationId": "Persons_GetPersonsInCategoryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PersonsResultDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/{categoryId}/persons/identified": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "operationId": "Persons_GetIdentifiedPersonsInCategoryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PersonsResultDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/categories/{categoryId}/persons/unidentified": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "operationId": "Persons_GetUnidentifiedPersonsInCategoryAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PersonsResultDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/persons/{identificationType}/recentlyUploaded": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Retrieve Faces of recently Uploaded Assets",
                "description": "Returns list of faces recently uploaded assets.",
                "operationId": "Persons_GetPersonsOfRecentlyUploadedAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificationType",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PersonDetailsDto"
                        }
                    }
                }
            }
        },
        "/persons/{identificationType}/mostViewed": {
            "get": {
                "tags": [
                    "Persons"
                ],
                "summary": "Retrieve Faces in Most viewed Assets",
                "description": "Returns list faces of most viewed assets.",
                "operationId": "Persons_GetPersonsOfMostViewedAsset",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "identificationType",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/PersonDetailsDto"
                        }
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve Report Types",
                "description": "Returns a collection of report types.",
                "operationId": "Reports_GetReportTypes",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportTypeDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/report/{reportType}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve Report",
                "description": "Returns a report.",
                "operationId": "Reports_GetReport",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportType",
                        "in": "path",
                        "description": "The report type name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/ReportKeyValueCountDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/reports/{reportType}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve Reports",
                "description": "Returns reports by report type.",
                "operationId": "Reports_GetReports",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportType",
                        "in": "path",
                        "description": "The report type name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/ReportKeyValueCountDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/reports/{reportType}/groups": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve Groups Report",
                "description": "Returns report groups by report type.",
                "operationId": "Reports_GetReportGroups",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportType",
                        "in": "path",
                        "description": "The report type name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportKeyValueCountDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/reports/{reportType}/groups/{groupId}/users": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve User Groups Report",
                "description": "Returns a report on user groups.",
                "operationId": "Reports_GetReportGroupUsers",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportType",
                        "in": "path",
                        "description": "The report type name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportKeyValueCountDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/reports/{reportType}/users": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve Users Report",
                "description": "Returns a report on users.",
                "operationId": "Reports_GetReportUsers",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportType",
                        "in": "path",
                        "description": "The report type name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportKeyValueCountDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/reports/{reportType}/users/{userId}/assets": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve Users Assets Report",
                "description": "Returns a report of user assets.",
                "operationId": "Reports_GetReportUsersAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportType",
                        "in": "path",
                        "description": "The report type name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportKeyValueCountDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/reports/{reportType}/users/{userId}/assets/{assetId}/events": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve User Asset Events Report",
                "description": "Returns a report of user assets events.",
                "operationId": "Reports_GetReportUsersAssetEvents",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportType",
                        "in": "path",
                        "description": "The report type name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/ReportKeyValueCountDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/reports/{reportType}/groups/{groupId}/users/{userId}/assets": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve User Group Assets Report",
                "description": "Returns a report of user groups assets.",
                "operationId": "Reports_GetReportGroupUsersAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportType",
                        "in": "path",
                        "description": "The report type name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReportKeyValueCountDto"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/reports/{reportType}/groups/{groupId}/users/{userId}/assets/{assetId}/events": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve User Group Assets Events Report",
                "description": "Returns a report of user groups assets events.",
                "operationId": "Reports_GetReportGroupUsersAssetEvents",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportType",
                        "in": "path",
                        "description": "The report type name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "The group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/ReportKeyValueCountDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/v2/reports": {
            "get": {
                "tags": [
                    "ReportsV2"
                ],
                "summary": "Retrieve a list of all available reports",
                "description": "Returns a list of available reports.",
                "operationId": "ReportsV2_GetAvailableReportsV2",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/ReportKeyValueCountDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/v2/reports/{reportId}/embed": {
            "get": {
                "tags": [
                    "ReportsV2"
                ],
                "summary": "Retrieve an embed token for the specified report.",
                "description": "Returns a report embed token.",
                "operationId": "ReportsV2_GetReportV2EmbedInformation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "The id of the report that the embed token is being requested for.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/ReportKeyValueCountDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/savedsearches": {
            "get": {
                "tags": [
                    "SavedSearches"
                ],
                "summary": "Retrieve Saved Searches",
                "description": "Retrieves all custom saved searches.",
                "operationId": "SavedSearches_GetSavedSearches",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/SavedSearchDto"
                        }
                    },
                    "404": {
                        "description": "A saved search was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "SavedSearches"
                ],
                "summary": "Create Saved Search",
                "description": "Creates a new custom search.",
                "operationId": "SavedSearches_CreateSavedSearch",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "savedSearchPostDetailDto",
                        "in": "body",
                        "description": "The metadata used to save a new custom search.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SavedSearchPostDetailDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The saved search was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/SavedSearchDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/savedsearches/{savedSearchId}": {
            "get": {
                "tags": [
                    "SavedSearches"
                ],
                "summary": "Retrieve Saved Search",
                "description": "Retrieves a custom saved search.",
                "operationId": "SavedSearches_GetSavedSearch",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "savedSearchId",
                        "in": "path",
                        "description": "The saved search id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/SavedSearchDto"
                        }
                    },
                    "404": {
                        "description": "A saved search was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "SavedSearches"
                ],
                "summary": "Remove Saved Search",
                "description": "Removes a custom saved search.",
                "operationId": "SavedSearches_DeleteSavedSearch",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "savedSearchId",
                        "in": "path",
                        "description": "The saved search id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "404": {
                        "description": "A saved search was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "patch": {
                "tags": [
                    "SavedSearches"
                ],
                "summary": "Update Saved Search",
                "description": "Update a custom saved search with a list of patch operations.",
                "operationId": "SavedSearches_PatchSavedSearch",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "savedSearchId",
                        "in": "path",
                        "description": "The saved search id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "The list of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "A saved search was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/savedsearches/{savedSearchId}/share": {
            "get": {
                "tags": [
                    "SavedSearches"
                ],
                "summary": "Retrieve Saved Search Shares",
                "description": "Retrieves shares for a saved search.",
                "operationId": "SavedSearches_GetSavedSearchSharedWithDetails",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "savedSearchId",
                        "in": "path",
                        "description": "The saved search id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/SavedSearchSharedWithDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "A saved search was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "SavedSearches"
                ],
                "summary": "Create Saved Search",
                "description": "Creates a custom saved search.",
                "operationId": "SavedSearches_ShareSavedSearch",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "savedSearchShareDto",
                        "in": "body",
                        "description": "The saved search metadata details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SavedSearchShareDto"
                        }
                    },
                    {
                        "name": "savedSearchId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "A saved search was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/savedsearches/pinned": {
            "get": {
                "tags": [
                    "SavedSearches"
                ],
                "summary": "Retrieve Pinned Saved Searches",
                "description": "Retrieves all pinned saved searches.",
                "operationId": "SavedSearches_GetPinnedSavedSearches",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/SavedSearchDto"
                        }
                    },
                    "404": {
                        "description": "A pinned saved search was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/mostViewed": {
            "get": {
                "tags": [
                    "Searches"
                ],
                "summary": "Retrieve Most Viewed Assets",
                "description": "Returns list of most viewed assets.",
                "operationId": "Searches_MostViewedAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetFolderDto"
                        }
                    }
                }
            }
        },
        "/recentlyUploaded": {
            "get": {
                "tags": [
                    "Searches"
                ],
                "summary": "Retrieve Recently Uploaded Assets",
                "description": "Returns list of recently uploaded assets.",
                "operationId": "Searches_RecentlyUploadedAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetFolderDto"
                        }
                    }
                }
            }
        },
        "/search/facets": {
            "get": {
                "tags": [
                    "Searches"
                ],
                "summary": "Retrieve Facets",
                "description": "Returns a collection of facets.",
                "operationId": "Searches_GetFacetsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FacetInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/share/{shareCode}": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Retrieve Shared Asset Information",
                "description": "Retrieves shared assets information.",
                "operationId": "Sharing_GetSharedByInformation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "shareCode",
                        "in": "path",
                        "description": "The share code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/ShareDetailsDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/share/{shareCode}/assets": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Retrieve Shared Assets",
                "description": "Retrieves shared assets.",
                "operationId": "Sharing_GetSharedAssets",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "shareCode",
                        "in": "path",
                        "description": "The share code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetFolderDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "A shared asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/share/{shareCode}/assets/{assetId}": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Retrieve Shared Asset",
                "description": "Retrieves a shared asset for a given share code and asset id.",
                "operationId": "Sharing_GetSharedAsset",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "shareCode",
                        "in": "path",
                        "description": "The share code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "A shared asset was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/share/{shareCode}/assets/{assetId}/renditions": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Retrieves Shared Asset's Rendition Types",
                "description": "Retrieves all rendition types for a given shared asset.",
                "operationId": "Sharing_GetSharedAssetRenditionKinds",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "shareCode",
                        "in": "path",
                        "description": "The share code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AssetRenditionKindDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/share/{shareCode}/assets/{assetId}/renditions/{renditionKindId}": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Retrieve Shared Asset's Rendition",
                "description": "Retrieves a specific rendition for a given shared asset.",
                "operationId": "Sharing_GetSharedAssetRendition",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "shareCode",
                        "in": "path",
                        "description": "The share code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "renditionKindId",
                        "in": "path",
                        "description": "The specific rendition kind id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AssetRenditionDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The asset rendition was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/share/{shareCode}/renditionKinds": {
            "get": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Retrieves Shared Asset's Rendition Types By Share Code",
                "description": "Retrieves all the rendition types available for the given share code.",
                "operationId": "Sharing_GetSharedAssetsRenditionKinds",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "shareCode",
                        "in": "path",
                        "description": "The share code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RenditionKindDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/shareAssets": {
            "post": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Create Share",
                "description": "Initiate a share operation for a given set of assets.",
                "operationId": "Sharing_ShareAssetsAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "shareRequest",
                        "in": "body",
                        "description": "The share details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShareRequest"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/ShareResponseDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/share/{shareCode}/authorize": {
            "post": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Create Gallery Authorization",
                "description": "Creates a gallery authorization request.",
                "operationId": "Sharing_GalleryAuthorization",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "galleryPassword",
                        "in": "body",
                        "description": "The gallery password.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shareCode",
                        "in": "path",
                        "description": "The share code.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/WebGalleryAuthorizationDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/shareLightboxes": {
            "post": {
                "tags": [
                    "Sharing"
                ],
                "summary": "Create Share For Lightbox Set",
                "description": "Initiate a share operation for a given set of lightbox.",
                "operationId": "Sharing_ShareLightboxesAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "shareRequest",
                        "in": "body",
                        "description": "The share details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ShareRequest"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/ShareResponseDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/public/{domainName}/termsAndConditions": {
            "get": {
                "tags": [
                    "TermsAndConditions"
                ],
                "summary": "Retrieve Terms And Conditions",
                "description": "Retrieves the terms and conditions for a given domain name.",
                "operationId": "TermsAndConditions_RetrieveTermsAndConditionsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "domainName",
                        "in": "path",
                        "description": "The domain name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/TermsAndConditionsDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/uploads": {
            "post": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Create Asset",
                "description": "Creates an asset and returns newly created asset information.",
                "operationId": "Uploads_CreateAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Request with asset title.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateAssetRequest"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The asset was successfully created.",
                        "schema": {
                            "$ref": "#/definitions/UploadInfoDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request.",
                        "schema": {
                            "$ref": "#/definitions/ValidationResultDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/uploads/{assetId}/attributes": {
            "post": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Create Asset Attributes",
                "description": "Add attributes to an asset.",
                "operationId": "Uploads_AddAttributesToAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "attributes",
                        "in": "body",
                        "description": "The list of attributes.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully added attributes to asset.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/uploads/{assetId}/keywords": {
            "post": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Create Asset Association With Keywords",
                "description": "Associates list of keywords to specified asset.",
                "operationId": "Uploads_AttachKeywordsToAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "keywords",
                        "in": "body",
                        "description": "The list of keywords.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully associated list of keywords to asset.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/uploads/{assetId}/categories": {
            "post": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Create Asset Association With Categories",
                "description": "Associates specified asset into list of categories.",
                "operationId": "Uploads_AttachCategoriesToAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "categoryGuids",
                        "in": "body",
                        "description": "The list of category guids.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Asset successfully associated with list of categories.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/uploads/{assetId}/lightboxes": {
            "post": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Create Asset Association With Lightbox",
                "description": "Add asset to a lightbox.",
                "operationId": "Uploads_AddUploadToLightboxAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "lightboxPostDetailDto",
                        "in": "body",
                        "description": "The lightbox details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LightboxPostDetailDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The asset was successfully added to the lightbox.",
                        "schema": {
                            "$ref": "#/definitions/UploadLightboxDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/uploads/{uploadId}/lightboxesassets": {
            "post": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Create Upload Association With Lightbox",
                "description": "Add uploaded asset to a lightbox.",
                "operationId": "Uploads_AddAssetToLightbox",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "uploadId",
                        "in": "path",
                        "description": "The upload id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "lightboxId",
                        "in": "body",
                        "description": "The lightbox id.",
                        "required": true,
                        "schema": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully added uploaded asset to lightbox.",
                        "schema": {
                            "$ref": "#/definitions/UploadLightboxDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/uploads/{assetId}/lightboxes/{lightboxId}": {
            "patch": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Update Lightbox",
                "description": "Update the lightbox with a list of patch operations.",
                "operationId": "Uploads_PatchLightbox",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "The list of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/UploadLightboxDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/uploads/lightboxes/{lightboxId}/assets": {
            "post": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Create Lightbox Association With Asset List",
                "description": "Add a list of assets to a lightbox.",
                "operationId": "Uploads_AddAssetsToLightbox",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "lightboxId",
                        "in": "path",
                        "description": "The lightbox id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "uploadLightboxForApprovalDto",
                        "in": "body",
                        "description": "The metadata with collection of asset id.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UploadLightboxForApprovalDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/UploadLightboxDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/uploads/{assetId}": {
            "put": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Complete Upload",
                "operationId": "Uploads_UpdateAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "assetUploadDto",
                        "in": "body",
                        "description": "The asset upload details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssetUploadDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/NewAssetInfoDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request.",
                        "schema": {
                            "$ref": "#/definitions/ValidationResultDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Update Asset",
                "description": "Update asset with a list of patch operations.",
                "operationId": "Uploads_PatchAsset",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "assetId",
                        "in": "path",
                        "description": "The asset id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "events",
                        "in": "body",
                        "description": "The list of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/RestfulDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The asset was not found."
                    }
                }
            }
        },
        "/uploads/validate": {
            "post": {
                "tags": [
                    "Uploads"
                ],
                "summary": "Validate Uploads",
                "description": "Validate a collection of uploads.",
                "operationId": "Uploads_ValidateUpload",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "uploadValidationParameters",
                        "in": "body",
                        "description": "The collection of validation details.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UploadValidationParameters"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UploadValidationResultDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "tags": [
                    "UserGroups"
                ],
                "summary": "Retrieve Groups",
                "description": "Retrieves list of groups that belong to the Organizational Unit.",
                "operationId": "UserGroups_ListGroupsAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/UserGroupDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "UserGroups"
                ],
                "summary": "Create Group",
                "description": "Creates the user group and gives it permissions to the library.",
                "operationId": "UserGroups_CreateUserGroupAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userGroupDto",
                        "in": "body",
                        "description": "The details describing the new user group.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserGroupDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "409": {
                        "description": "A group with the same name already exists."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "tags": [
                    "UserGroups"
                ],
                "summary": "Retrieve Group Details",
                "description": "Retrieves group details based on group id.",
                "operationId": "UserGroups_GetGroupByIdAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserGroupDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An user group was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/groups/{userGroupId}/categories": {
            "get": {
                "tags": [
                    "UserGroups"
                ],
                "summary": "Retrieve Group Categories",
                "description": "Retrieves list of categories based on the group id.",
                "operationId": "UserGroups_GetGroupRestrictedCategoriesAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "The group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/CategoryAccessDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "patch": {
                "tags": [
                    "UserGroups"
                ],
                "summary": "Update Group With Patch Operations",
                "description": "Updates user group using a list of patch operations.",
                "operationId": "UserGroups_PatchRestrictedCategoriesAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "The group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "operations",
                        "in": "body",
                        "description": "The list of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperationDto"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/CategoryAccessDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An user group was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/groups/{userGroupId}": {
            "put": {
                "tags": [
                    "UserGroups"
                ],
                "summary": "Update Group",
                "description": "Updates user group and gives/revokes permission to the library.",
                "operationId": "UserGroups_UpdateUserGroupAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "The group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userGroupDto",
                        "in": "body",
                        "description": "Details describing the new user group.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserGroupDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted.",
                        "schema": {
                            "$ref": "#/definitions/UserGroupDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "An user group was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserGroups"
                ],
                "summary": "Remove Group",
                "description": "Removes the user group and detaches its permissions from the library.",
                "operationId": "UserGroups_DeleteUserGroupAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userGroupId",
                        "in": "path",
                        "description": "The group id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Request was accepted."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "403": {
                        "description": "Server refused the request."
                    },
                    "404": {
                        "description": "An user group was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/users/current/permissions": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve Current User Permissions",
                "description": "Retrieves the user permission for the current user in the request.",
                "operationId": "Users_GetCurrentUserPermissions",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AppUserDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            }
        },
        "/users/current": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve Current User",
                "description": "Retrieves the user details for the current user in the request.",
                "operationId": "Users_GetCurrentUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AppUserDto"
                        }
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update Current User",
                "description": "Update the current user details with a list of patch operations.",
                "operationId": "Users_UpdateUserFieldsAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "changes",
                        "in": "body",
                        "description": "The list of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperation"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AppUserDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "The user was not found."
                    }
                }
            }
        },
        "/users/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve User",
                "description": "Retrieves the user details for a given user id.",
                "operationId": "Users_GetUserById",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AppUserDto"
                        }
                    },
                    "404": {
                        "description": "The user was not found."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "description": "Update the user details for a given user id.",
                "operationId": "Users_UpdateUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "userUpdateDto",
                        "in": "body",
                        "description": "The user details metadata.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserUpdateDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AppUserDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The user was not found."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Remove User",
                "description": "Remove the given user id.",
                "operationId": "Users_DeleteUserAsync",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The user was not found."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "description": "Update the user details for a given user id with a list of patch operations.",
                "operationId": "Users_PatchUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The user id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "changes",
                        "in": "body",
                        "description": "The list of patch operations.",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PatchOperation"
                            }
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AppUserDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "404": {
                        "description": "The user was not found."
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve Users",
                "description": "Retrieves a collection of users details belonging to the library.",
                "operationId": "Users_GetUsersByLibraryId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AppUserDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "500": {
                        "description": "The request failed because of a problem on the server."
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create User",
                "description": "Creates a new user in the library.",
                "operationId": "Users_CreateUserAsync",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userDetailDto",
                        "in": "body",
                        "description": "The user details metadata.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserPostDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AppUserDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "409": {
                        "description": "A user with same username already exists."
                    }
                }
            }
        },
        "/public/users/recoverpassword": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Recover Password",
                "description": "Recovers the user password for a given username.",
                "operationId": "Users_PostRecoverPassword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userName",
                        "in": "body",
                        "description": "The username.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "The user was not found."
                    },
                    "412": {
                        "description": "Pre condition failed."
                    }
                }
            }
        },
        "/public/users/recoverpassword/{token}": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Recover Password",
                "description": "Defines a new user password.",
                "operationId": "Users_PostRecoverPasswordForSelectedUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "The token.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "body",
                        "description": "The new password.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful."
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "404": {
                        "description": "The user was not found."
                    }
                }
            }
        },
        "/users/approvers": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve Approval Users",
                "description": "Retrieves the approval users in the library.",
                "operationId": "Users_GetApprovalUsersByLibraryId",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/UserRecordsDto"
                        }
                    }
                }
            }
        },
        "/public/{domainName}/users/registrationfields": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve Public Custom Fields",
                "description": "Retrieves the public custom fields for a given domain name.",
                "operationId": "Users_PublicGetUserRegistrationFields",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "domainName",
                        "in": "path",
                        "description": "The domain name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/UserRegistrationFieldsDto"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create Custom Fields",
                "description": "Creates custom fields for a given domain name.",
                "operationId": "Users_PublicRegisterUserWithCustomFields",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "domainName",
                        "in": "path",
                        "description": "The domain name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userRegistrationFieldsPostDto",
                        "in": "body",
                        "description": "The custom fields metadata.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserRegistrationFieldsPostDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "409": {
                        "description": "A user with same username already exists."
                    }
                }
            }
        },
        "/users/registrationfields": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve Custom Fields From Library",
                "description": "Retrieves all custom fields from current user's library.",
                "operationId": "Users_GetUserRegistrationFields",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/UserRegistrationFieldsDto"
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create Custom Fields",
                "description": "Creates custom fields in the current library.",
                "operationId": "Users_RegisterUserWithCustomFields",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "userRegistrationFieldsPostDto",
                        "in": "body",
                        "description": "The custom fields metadata.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserRegistrationFieldsPostDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "format": "uuid",
                            "type": "string",
                            "example": "00000000-0000-0000-0000-000000000000"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    },
                    "409": {
                        "description": "A user with same username already exists."
                    }
                }
            }
        },
        "/users/{id}/customfields": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve Custom Fields From User",
                "description": "Retrieves the collection of custom fields from a given user.",
                "operationId": "Users_GetUserCustomFields",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user id.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserCustomFieldDto"
                            }
                        }
                    },
                    "401": {
                        "description": "The current user is not authorized to view this end-point."
                    }
                }
            }
        },
        "/public/{domainName}/users": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create User",
                "description": "Creates a a new user for a given domain name.",
                "operationId": "Users_CreateUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "domainName",
                        "in": "path",
                        "description": "The domain name.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userPostDto",
                        "in": "body",
                        "description": "The user details metadata.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserPostDto"
                        }
                    },
                    {
                        "name": "Ocp-Apim-Subscription-Key",
                        "in": "header",
                        "description": "The subscription key of your api plan.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "This is the authentication token",
                        "required": true,
                        "type": "string",
                        "format": "bG9sIHlvdSB0aGluayB0aGlzIHdhcyBhIHJlYWwgdG9rZW4/"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Request was successful.",
                        "schema": {
                            "$ref": "#/definitions/AppUserDto"
                        }
                    },
                    "400": {
                        "description": "There was a problem with the data sent with the request."
                    },
                    "409": {
                        "description": "A user with same username already exists."
                    }
                }
            }
        },
        "/bulk": {
            "post": {
                "tags": [
                    "Home"
                ],
                "operationId": "Home_Bulk",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "multipart/mixed"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "multipart/mixed"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "AppUserFeatureDto": {
            "type": "object",
            "properties": {
                "IsEnabled": {
                    "type": "boolean"
                },
                "Value": {
                    "type": "string"
                },
                "Timestamp": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "PatchOperationDto": {
            "description": "The patch operation.",
            "type": "object",
            "properties": {
                "op": {
                    "description": "Gets or sets the operation.",
                    "type": "string"
                },
                "path": {
                    "description": "Gets or sets the path.",
                    "type": "string"
                },
                "value": {
                    "description": "Gets or sets the value.",
                    "type": "object"
                },
                "from": {
                    "description": "Gets or sets the from.",
                    "type": "string"
                }
            }
        },
        "AssetDto": {
            "description": "Representation of an Asset domain entity.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Identifier of the asset.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "title": {
                    "description": "Title of the asset.",
                    "type": "string"
                },
                "media": {
                    "$ref": "#/definitions/MediaFileInformationDto",
                    "description": "Information about the media file"
                },
                "file": {
                    "$ref": "#/definitions/MediaFileDto",
                    "description": "String file name representation"
                },
                "description": {
                    "description": "Asset description",
                    "type": "string"
                },
                "altText": {
                    "description": "Asset alt text",
                    "type": "string"
                },
                "containerName": {
                    "description": "Library name",
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "type": "integer"
                },
                "rating": {
                    "$ref": "#/definitions/RatingReadModel"
                },
                "attributes": {
                    "description": "Attributes",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "record": {
                    "$ref": "#/definitions/RecordDto"
                },
                "categories": {
                    "description": "Categories",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "keywords": {
                    "description": "keywords",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "relatedassets": {
                    "description": "Related Asset",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "assetCheckOutComment": {
                    "type": "string"
                },
                "assetCheckInComment": {
                    "type": "string"
                },
                "checkedOutBy": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "renderAsPdf": {
                    "type": "boolean"
                },
                "wopiEnabled": {
                    "type": "boolean"
                },
                "userViewCounts": {
                    "type": "object",
                    "additionalProperties": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "createdAt": {
                    "format": "date-time",
                    "description": "The date and time in UTC the asset was created in the system.",
                    "type": "string"
                },
                "permissions": {
                    "$ref": "#/definitions/AssetPermissionsDto",
                    "description": "Collection of permissions user has in context of the asset"
                },
                "hasVideoIntelligenceContent": {
                    "type": "boolean"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "MediaFileInformationDto": {
            "description": "Information about a media file",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "small": {
                    "description": "Gets or sets the small path.",
                    "type": "string"
                },
                "thumb": {
                    "description": "Gets or sets the thumb.",
                    "type": "string"
                },
                "large": {
                    "description": "Gets or sets the large.",
                    "type": "string"
                },
                "original": {
                    "description": "Gets or sets the original.",
                    "type": "string"
                },
                "medium": {
                    "description": "Gets or sets the medium path.",
                    "type": "string"
                },
                "download": {
                    "description": "Gets or sets the download.",
                    "type": "string"
                },
                "downloadRequest": {
                    "type": "string",
                    "readOnly": true
                },
                "stream": {
                    "description": "Gets or sets the streaming url.",
                    "type": "string"
                },
                "streamLoDef": {
                    "description": "Gets or sets the low definition streaming url.",
                    "type": "string"
                },
                "originalDimensions": {
                    "description": "Gets or sets the original with the dimensions intact.",
                    "type": "string"
                },
                "sasExpiry": {
                    "format": "int64",
                    "type": "integer"
                },
                "sasRenewal": {
                    "format": "int64",
                    "type": "integer"
                },
                "renditionItemCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "autodeskUrn": {
                    "type": "string"
                },
                "watermarked": {
                    "type": "boolean"
                }
            }
        },
        "MediaFileDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "title": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "md5": {
                    "type": "string"
                },
                "fileType": {
                    "type": "string"
                },
                "sizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "uploadedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "modifiedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "approvedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "disapprovedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "expiresAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "imageHeight": {
                    "format": "int64",
                    "type": "integer"
                },
                "imageWidth": {
                    "format": "int64",
                    "type": "integer"
                },
                "frameRate": {
                    "type": "string"
                },
                "length": {
                    "type": "string"
                },
                "bitRate": {
                    "type": "string"
                },
                "mimeType": {
                    "type": "string"
                },
                "resolution": {
                    "type": "string"
                },
                "colorMode": {
                    "type": "string"
                },
                "aspectRatio": {
                    "type": "string"
                },
                "orientation": {
                    "type": "string"
                },
                "sharedRenditionWidth": {
                    "format": "int64",
                    "type": "integer"
                },
                "sharedRenditionHeight": {
                    "format": "int64",
                    "type": "integer"
                },
                "sharedRenditionFileExtension": {
                    "type": "string"
                },
                "sharedRenditionFileSizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "RatingReadModel": {
            "type": "object",
            "properties": {
                "average": {
                    "format": "int32",
                    "type": "integer"
                },
                "user": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "RecordDto": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "createdBy": {
                    "$ref": "#/definitions/UserRecordDto"
                },
                "modifiedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "modifiedBy": {
                    "$ref": "#/definitions/UserRecordDto"
                },
                "softDeletedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "softDeletedBy": {
                    "$ref": "#/definitions/UserRecordDto"
                },
                "version": {
                    "$ref": "#/definitions/VersionInformation"
                }
            }
        },
        "AssetPermissionsDto": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PermissionOptionDto"
                    }
                }
            }
        },
        "WebLinks": {
            "type": "object",
            "properties": {
                "self": {
                    "type": "string"
                },
                "functions": {
                    "description": "Gets the functions.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UserRecordDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "VersionInformation": {
            "description": "The version information.",
            "type": "object",
            "properties": {
                "version": {
                    "format": "int32",
                    "type": "integer"
                },
                "current": {
                    "format": "uuid",
                    "description": "Gets or sets the current.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "head": {
                    "format": "uuid",
                    "description": "Gets or sets the head.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "parentid": {
                    "format": "uuid",
                    "description": "Gets the parent identifier.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "isversionable": {
                    "description": "Gets a value indicating whether this instance is versionable.",
                    "type": "boolean"
                },
                "islatestversion": {
                    "description": "Gets a value indicating whether this instance is latest version.",
                    "type": "boolean"
                },
                "ismajorversion": {
                    "description": "Gets a value indicating whether this instance is major version.",
                    "type": "boolean"
                }
            }
        },
        "PermissionOptionDto": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of permission option",
                    "type": "string"
                }
            }
        },
        "AssetUploadDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "filename": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "fileSizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "AssetFolderDto": {
            "description": "Represents a folder for storing assets",
            "type": "object",
            "properties": {
                "assetCount": {
                    "format": "int64",
                    "description": "The total number of assets in the folder",
                    "type": "integer"
                },
                "assets": {
                    "description": "The assets",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetDto"
                    }
                },
                "staleAssets": {
                    "description": "Are there any stale assets or assets that have not finished processing",
                    "type": "boolean"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "CreateAssetRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "fileSizeInBytes": {
                    "format": "int64",
                    "type": "integer"
                },
                "filename": {
                    "description": "File name",
                    "type": "string"
                },
                "fileNameVersioning": {
                    "description": "File Name Versioning flag",
                    "type": "boolean"
                }
            }
        },
        "UploadInfoDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Asset Id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "uploadUrl": {
                    "description": "Blob url",
                    "type": "string"
                },
                "uploadFileName": {
                    "type": "string"
                },
                "mediaFileId": {
                    "format": "uuid",
                    "description": "MediaFileId",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "AssetSearchDto": {
            "description": "Representation of an asset search.",
            "type": "object",
            "properties": {
                "includeSoftDeleted": {
                    "description": "Whether soft deleted assets should be included in the result set.",
                    "type": "boolean"
                },
                "count": {
                    "format": "int32",
                    "description": "The number of assets to return.",
                    "type": "integer"
                },
                "offset": {
                    "format": "int32",
                    "description": "The number of offset to start returning assets from.",
                    "type": "integer"
                },
                "search": {
                    "description": "The search query.",
                    "type": "string"
                },
                "sort": {
                    "description": "The sort order.",
                    "type": "string"
                },
                "filters": {
                    "description": "The filters applied to the search.",
                    "type": "string"
                },
                "containerfilter": {
                    "description": "The container filter applied to the search.",
                    "type": "string"
                },
                "searchFields": {
                    "description": "The search fields to search in.",
                    "type": "string"
                },
                "includeTotalCount": {
                    "description": "Whether we'll include the total number of assets in the search result.",
                    "type": "boolean"
                }
            }
        },
        "RelatedAssetsDto": {
            "description": "The Response for related assets get.",
            "type": "object",
            "properties": {
                "composite": {
                    "description": "Gets or sets the composite.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetDto"
                    }
                },
                "derived": {
                    "description": "Gets or sets the derived.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetDto"
                    }
                }
            }
        },
        "RelatedAssetsRequest": {
            "type": "object",
            "properties": {
                "derived": {
                    "description": "Gets or sets the comment.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            }
        },
        "RelatedAssetGalleryUrlDetailDto": {
            "description": "Represents a related asset gallery url",
            "type": "object",
            "properties": {
                "WebGalleryUrl": {
                    "description": "Url used to access related asset gallery",
                    "type": "string"
                }
            }
        },
        "ValidationResultDto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "NewAssetInfoDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Asset Id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "uploadUrl": {
                    "description": "Blob url",
                    "type": "string"
                },
                "uploadFileName": {
                    "type": "string"
                },
                "mediaFileId": {
                    "format": "uuid",
                    "description": "MediaFileId",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "title": {
                    "description": "Title",
                    "type": "string"
                },
                "description": {
                    "description": "Description",
                    "type": "string"
                },
                "fileSizeInBytes": {
                    "format": "int64",
                    "description": "FileSizeInBytes",
                    "type": "integer"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "CheckInAssetRequest": {
            "description": "CheckIn Asset request payload",
            "type": "object",
            "properties": {
                "comment": {
                    "description": "Gets or sets the comment.",
                    "type": "string"
                },
                "status": {
                    "format": "int32",
                    "description": "Gets or sets the status.",
                    "type": "integer"
                },
                "fileSizeInBytes": {
                    "format": "int64",
                    "description": "The size of the original file this asset represents.",
                    "type": "integer"
                },
                "uploadFilename": {
                    "description": "The name of the file uploaded",
                    "type": "string"
                },
                "fileName": {
                    "description": "FileName of the asset.",
                    "type": "string"
                },
                "uploadUrl": {
                    "description": "The name of the file uploaded",
                    "type": "string"
                }
            }
        },
        "KeywordDto": {
            "description": "Keyword Dto",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Gets or sets the name of the keyword.",
                    "type": "string"
                },
                "keywordName": {
                    "description": "Gets or sets the name of the keyword.",
                    "type": "string"
                },
                "isSearchable": {
                    "description": "Gets or sets a value indicating whether this instance is searchable.",
                    "type": "boolean"
                },
                "isApproved": {
                    "description": "Gets or sets a value indicating whether this instance is approved.",
                    "type": "boolean"
                },
                "groupName": {
                    "description": "Gets or sets the name of the group.",
                    "type": "string"
                },
                "groupPath": {
                    "description": "Gets or sets the group path.",
                    "type": "string"
                },
                "approvedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the approved date.",
                    "type": "string"
                },
                "approvedBy": {
                    "format": "uuid",
                    "description": "Gets or sets the approved by.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "requestedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the requested date.",
                    "type": "string"
                },
                "approvalStatus": {
                    "description": "Gets or sets or sets the approval status.",
                    "type": "string"
                },
                "requestedBy": {
                    "format": "uuid",
                    "description": "Gets or sets or sets the requested by.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "AssetKeywordsDto": {
            "type": "object",
            "properties": {
                "assetId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "FolderDto": {
            "description": "Represents a container of assets",
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the folder",
                    "type": "string"
                },
                "assetCount": {
                    "format": "int32",
                    "description": "The number of assets this folder contains",
                    "type": "integer"
                },
                "subfolderCount": {
                    "format": "int32",
                    "description": "The number of sub folders that this folder contains",
                    "type": "integer"
                },
                "subfolders": {
                    "description": "The number of sub folders that this folder contains",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FolderDto"
                    }
                },
                "subcats": {
                    "$ref": "#/definitions/SubCategoryInformation",
                    "description": "Gets or sets the subcategories information."
                },
                "tree": {
                    "$ref": "#/definitions/TreePath",
                    "description": "The tree path for this folder"
                },
                "id": {
                    "format": "uuid",
                    "description": "Id of category",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "parentId": {
                    "format": "uuid",
                    "description": "Parent Id of category, if subcategory",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "record": {
                    "$ref": "#/definitions/RecordDto"
                },
                "categoryFeatures": {
                    "$ref": "#/definitions/CategoryFeaturesInfo",
                    "description": "The category feature for this category"
                },
                "includedInBrandedPortalSync": {
                    "type": "boolean"
                },
                "syncedBrandedPortals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "SubCategoryInformation": {
            "description": "The sub category information.",
            "type": "object",
            "properties": {
                "total": {
                    "format": "int32",
                    "description": "Gets or sets the total.",
                    "type": "integer"
                }
            }
        },
        "TreePath": {
            "description": "Stores the full path to a folder in a tree",
            "type": "object",
            "properties": {
                "path": {
                    "description": "The full path to the folder in the tree",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the category",
                    "type": "string"
                },
                "idPath": {
                    "description": "The full path to the folderId in the tree",
                    "type": "string"
                },
                "id": {
                    "description": "The id of the category",
                    "type": "string"
                }
            }
        },
        "CategoryFeaturesInfo": {
            "type": "object",
            "properties": {
                "videoIntelligenceAutoIndex": {
                    "$ref": "#/definitions/CategoryFeatureSetDto"
                }
            }
        },
        "CategoryFeatureSetDto": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "inheritToChildren": {
                    "type": "boolean"
                }
            }
        },
        "AssetCategoriesDto": {
            "type": "object",
            "properties": {
                "assetId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "categoryIds": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "AssetCategoryResponseDetailV4": {
            "description": "The asset category response details.",
            "type": "object",
            "properties": {
                "assetId": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "categoryIds": {
                    "description": "Gets or sets the category ids.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            }
        },
        "AssetAttributesDto": {
            "description": "The asset attribute detail.",
            "type": "object",
            "properties": {
                "attributes": {
                    "description": "Gets or sets the attributes.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "UndeleteValidationParameters": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "fileName": {
                    "type": "string"
                }
            }
        },
        "UndeleteValidationResultDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "fileName": {
                    "type": "string"
                },
                "validationStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "PropertyValueMappingDto": {
            "description": "The asset history detail.",
            "type": "object",
            "properties": {
                "propertyId": {
                    "format": "uuid",
                    "description": "Gets the property identifier.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "entityObjectId": {
                    "format": "uuid",
                    "description": "Gets the entity object identifier.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "tagGroup": {
                    "description": "Gets the tag group.",
                    "enum": [
                        "File",
                        "Exif",
                        "Iptc",
                        "Xmp",
                        "Photoshop",
                        "IccProfile",
                        "Composite",
                        "OrgMetaData",
                        "Other",
                        "Xml",
                        "Zip",
                        "Microsoft",
                        "Pdf",
                        "FlashPix",
                        "Colors",
                        "Text",
                        "Tags"
                    ],
                    "type": "string"
                },
                "propertyName": {
                    "description": "Gets the name of the property.",
                    "type": "string"
                },
                "propertyValue": {
                    "description": "Gets the property value.",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "AssetAutotagsInfo": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Autotag"
                    }
                }
            }
        },
        "Autotag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "confidence": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "UserRating": {
            "type": "object",
            "properties": {
                "Rating": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CommentDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "assetId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "comment": {
                    "type": "string"
                },
                "versionNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "addedBy": {
                    "$ref": "#/definitions/UserDto"
                },
                "addedAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "commentType": {
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "UserDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "AssetHistoryDetailDto": {
            "description": "The Asset history detail.",
            "type": "object",
            "properties": {
                "assetHistoryDetail": {
                    "description": "Gets ot sets the assetHistoryDetail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetActivityDetailDto"
                    }
                },
                "summary": {
                    "$ref": "#/definitions/AssetSummaryDetailDto",
                    "description": "Gets ot sets the asset summary"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "AssetActivityDetailDto": {
            "description": "The Asset activity detail.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets ot sets the Id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "date": {
                    "format": "date-time",
                    "description": "Gets ot sets the Date",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/UserRecordDto",
                    "description": "Gets ot sets the User"
                },
                "type": {
                    "description": "Gets ot sets the Usage",
                    "type": "string"
                },
                "assetId": {
                    "format": "uuid",
                    "description": "Gets ot sets the assetId",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "comment": {
                    "description": "Gets ot sets the comment",
                    "type": "string"
                },
                "cropDescription": {
                    "description": "Gets ot sets the crop description",
                    "type": "string"
                },
                "sharedTo": {
                    "description": "Gets ot sets the sharedTo",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "brandedPortalName": {
                    "description": "Gets ot sets the branded portal name",
                    "type": "string"
                },
                "directLinkName": {
                    "description": "Gets ot sets the direct link name",
                    "type": "string"
                },
                "directLinkDescription": {
                    "description": "Gets ot sets the direct link description",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "AssetSummaryDetailDto": {
            "description": "The Asset Summary detail.",
            "type": "object",
            "properties": {
                "approvedDisapprovedBy": {
                    "description": "Gets the LatestApprover user",
                    "type": "string"
                },
                "uploadedBy": {
                    "description": "Gets the uploaded by user",
                    "type": "string"
                },
                "uploadedAt": {
                    "format": "date-time",
                    "description": "Gets the uploaded at date time",
                    "type": "string"
                },
                "approvedAt": {
                    "format": "date-time",
                    "description": "/// Gets the approved at date time",
                    "type": "string"
                },
                "disapprovedAt": {
                    "format": "date-time",
                    "description": "/// Gets the disapproved at date time",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "AssetRenditionDto": {
            "type": "object",
            "properties": {
                "renditionUrl": {
                    "type": "string"
                },
                "thumbnailUrl": {
                    "type": "string"
                },
                "pages": {
                    "$ref": "#/definitions/MultiPageRenditionDetail"
                },
                "sasExpiry": {
                    "format": "int64",
                    "type": "integer"
                },
                "sasRenewal": {
                    "format": "int64",
                    "type": "integer"
                }
            }
        },
        "MultiPageRenditionDetail": {
            "type": "object",
            "properties": {
                "count": {
                    "format": "int64",
                    "type": "integer"
                },
                "offSet": {
                    "format": "int32",
                    "type": "integer"
                },
                "renditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PageRenditionDetail"
                    }
                }
            }
        },
        "PageRenditionDetail": {
            "type": "object",
            "properties": {
                "sequence": {
                    "format": "int32",
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "AssetRenditionKindDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the rendition kind id .",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "renditionTypeId": {
                    "format": "uuid",
                    "description": "Gets or sets the rendition kind id .",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "height": {
                    "format": "int32",
                    "description": "Gets or sets the height.",
                    "type": "integer"
                },
                "width": {
                    "format": "int32",
                    "description": "Gets or sets the width.",
                    "type": "integer"
                },
                "length": {
                    "format": "int32",
                    "description": "Gets or sets the crop size.",
                    "type": "integer"
                },
                "mimeType": {
                    "description": "Gets or sets the mime type.",
                    "type": "string"
                },
                "watermarked": {
                    "description": "Gets or sets whether or not the rendition kind is watermarked.",
                    "type": "boolean"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "VideoIntelligenceAnalysisStatusDto": {
            "type": "object",
            "properties": {
                "Status": {
                    "type": "string"
                },
                "VideoIndexerId": {
                    "type": "string"
                },
                "RequestSubmittedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "StatusLastCheckedOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "AnalysisCompletedOn": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "VideoIndexerSubscriptionDto": {
            "type": "object",
            "properties": {
                "videoIndexerAccountId": {
                    "type": "string"
                },
                "videoIndexerId": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "accessToken": {
                    "type": "string"
                }
            }
        },
        "VideoIntelligenceAnalysisResultDto": {
            "type": "object",
            "properties": {
                "suggestedMinimumConfidenceRate": {
                    "format": "double",
                    "type": "number",
                    "readOnly": true
                },
                "insights": {
                    "$ref": "#/definitions/VideoIntelligenceInsightsDto"
                }
            }
        },
        "VideoIntelligenceInsightsDto": {
            "type": "object",
            "properties": {
                "keywords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VideoIntelligenceTextConfidenceInsightDto"
                    }
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VideoIntelligenceTextConfidenceInsightDto"
                    }
                },
                "topics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VideoIntelligenceTextConfidenceInsightDto"
                    }
                },
                "faces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VideoIntelligenceTextInsightDto"
                    }
                }
            }
        },
        "VideoIntelligenceTextConfidenceInsightDto": {
            "type": "object",
            "properties": {
                "confidence": {
                    "format": "double",
                    "type": "number"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "VideoIntelligenceTextInsightDto": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "VideoIntelligenceLimitsDto": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "allottedCredits": {
                    "format": "int32",
                    "type": "integer"
                },
                "maximumRunTime": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalAssetsIndexed": {
                    "format": "int32",
                    "type": "integer"
                },
                "remainingCredit": {
                    "format": "int32",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "AttributeDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the identifier.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "attributeType": {
                    "description": "Gets or sets the property data type.",
                    "enum": [
                        "Integer",
                        "DateTime",
                        "Boolean",
                        "Decimal",
                        "String",
                        "Id",
                        "List",
                        "MultiselectList"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Gets or sets the property name.",
                    "type": "string"
                },
                "searchFieldName": {
                    "description": "Gets or sets the search field name if exists for this attribute.",
                    "type": "string"
                },
                "tagName": {
                    "description": "Gets or sets the property name.",
                    "type": "string"
                },
                "displayAttribute": {
                    "description": "Gets or sets a value indicating whether display attribute.",
                    "type": "boolean"
                },
                "mapEmbeddedData": {
                    "description": "Gets or sets a value indicating whether map embedded data.",
                    "type": "boolean"
                },
                "embeddedDataType": {
                    "description": "Gets or sets the embedded data type.",
                    "enum": [
                        "File",
                        "Exif",
                        "Iptc",
                        "Xmp",
                        "Photoshop",
                        "IccProfile",
                        "Composite",
                        "OrgMetaData",
                        "Other",
                        "Xml",
                        "Zip",
                        "Microsoft",
                        "Pdf",
                        "FlashPix",
                        "Colors",
                        "Text",
                        "Tags"
                    ],
                    "type": "string"
                },
                "embeddedDataValue": {
                    "description": "Gets or sets the embedded data value.",
                    "type": "string"
                },
                "mappingDirection": {
                    "description": "Gets or sets the mapping direction.",
                    "enum": [
                        "Upload",
                        "Download"
                    ],
                    "type": "string"
                },
                "delimeter": {
                    "description": "Gets or sets the delimeter.",
                    "type": "string"
                },
                "isSystemProperty": {
                    "description": "Gets or sets a value indicating whether this instance is system property.",
                    "type": "boolean"
                },
                "showLabel": {
                    "description": "Display the property in the view list options.",
                    "type": "boolean"
                },
                "isRequired": {
                    "description": "Gets or sets a value indicating whether this is a required property.",
                    "type": "boolean"
                },
                "optionsList": {
                    "description": "The Options List.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomOptionsDetail"
                    }
                },
                "defaultExpression": {
                    "description": "Default expression to validate attributes.",
                    "type": "string"
                },
                "parentAttributeId": {
                    "type": "string"
                },
                "childrenAttributeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "CustomOptionsDetail": {
            "description": "The custom option detail.",
            "type": "object",
            "properties": {
                "optionValue": {
                    "description": "Value of the attribute.",
                    "type": "string"
                },
                "isDefault": {
                    "description": "If the attribute value is default.",
                    "type": "boolean"
                },
                "sequence": {
                    "format": "int32",
                    "description": "Sequence of the value.",
                    "type": "integer"
                }
            }
        },
        "GenericNameValueDto": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "EmbeddedDataValueObjectDto": {
            "type": "object",
            "properties": {
                "propertyName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "CascadingAttributesDto": {
            "type": "object",
            "properties": {
                "attributeDataType": {
                    "enum": [
                        "Integer",
                        "DateTime",
                        "Boolean",
                        "Decimal",
                        "String",
                        "Id",
                        "List",
                        "MultiselectList"
                    ],
                    "type": "string"
                },
                "attributeOptionNodeDtos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CascadingAttributeOptionDto"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "CascadingAttributeOptionDto": {
            "type": "object",
            "properties": {
                "attributeId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "BrandedPortalPostDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "pageLayout": {
                    "type": "string"
                },
                "language": {
                    "enum": [
                        "EN",
                        "FR"
                    ],
                    "type": "string"
                }
            }
        },
        "BrandedPortalDetailsDto": {
            "description": "Branded Portal Details",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "liveVersion": {
                    "format": "uuid",
                    "description": "Gets or sets the live version id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "draftVersion": {
                    "format": "uuid",
                    "description": "Gets or sets the draft version id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "status": {
                    "description": "Gets or sets the status.",
                    "enum": [
                        "Unknown",
                        "Draft",
                        "Live",
                        "Disabled",
                        "Deleted"
                    ],
                    "type": "string"
                },
                "createdAt": {
                    "format": "date-time",
                    "description": "Gets or sets the createdAt.",
                    "type": "string"
                },
                "host": {
                    "description": "Gets or sets the host.",
                    "type": "string"
                },
                "path": {
                    "description": "Gets or sets the path.",
                    "type": "string"
                },
                "liveHost": {
                    "description": "Gets or sets the live host.",
                    "type": "string"
                },
                "livePath": {
                    "description": "Gets or sets the live path.",
                    "type": "string"
                },
                "pageLayout": {
                    "description": "Gets or sets the page layout.",
                    "type": "string"
                },
                "lastPublishedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the last published datetime.",
                    "type": "string"
                },
                "draftModifiedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the draftModifiedAt.",
                    "type": "string"
                },
                "lastModifiedBy": {
                    "$ref": "#/definitions/UserRecordDto",
                    "description": "Gets or sets the lastModifiedBy."
                },
                "downloadSettings": {
                    "$ref": "#/definitions/DownloadSettingsDto",
                    "description": "Gets or sets download settings"
                },
                "navigationSettings": {
                    "$ref": "#/definitions/NavigationSettingsDto",
                    "description": "Gets or sets navigation settings"
                },
                "searchSettings": {
                    "$ref": "#/definitions/SearchSettingsDto",
                    "description": "Gets or sets search settings"
                },
                "restrictAccessSettings": {
                    "$ref": "#/definitions/RestrictAccessSettingsDto",
                    "description": "Gets or sets restrict access settings"
                },
                "highlightColourSettings": {
                    "$ref": "#/definitions/HighlightColourSettingsDto",
                    "description": "Gets or sets highlight colour settings"
                },
                "languageSettings": {
                    "$ref": "#/definitions/LanguageSettingsDto",
                    "description": "Gets or sets language settings"
                },
                "skinColors": {
                    "$ref": "#/definitions/BrandedPortalSkinColorsDetailDto",
                    "description": "Gets or sets skin colors"
                },
                "defaultLogoFilePath": {
                    "description": "Gets or sets default logo file path",
                    "type": "string"
                },
                "pageViews": {
                    "format": "int32",
                    "description": "Shows the total number of views (page loads) the branded portal has had.",
                    "type": "integer"
                },
                "downloads": {
                    "description": "Shows the total number of downloads from that portal, or \"Disabled\" when asset download is not enabled.",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "DownloadSettingsDto": {
            "description": "Branded Portal Download Settings",
            "type": "object",
            "properties": {
                "allowDownloads": {
                    "description": "Gets or sets allow downloads setting",
                    "type": "boolean"
                }
            }
        },
        "NavigationSettingsDto": {
            "description": "Branded Portal Navigation Settings",
            "type": "object",
            "properties": {
                "showNavigation": {
                    "description": "Gets or sets navigation shown setting",
                    "type": "boolean"
                }
            }
        },
        "SearchSettingsDto": {
            "description": "Branded Portal Search Settings",
            "type": "object",
            "properties": {
                "allowSearch": {
                    "description": "Gets or sets allow search setting",
                    "type": "boolean"
                }
            }
        },
        "RestrictAccessSettingsDto": {
            "description": "Branded Portal Restrict Access Settings",
            "type": "object",
            "properties": {
                "requireAccessKey": {
                    "description": "Gets or sets require access setting",
                    "type": "boolean"
                },
                "accessKey": {
                    "description": "Gets or sets branded portal access key",
                    "type": "string"
                }
            }
        },
        "HighlightColourSettingsDto": {
            "description": "Branded Portal Highlight Colour Settings",
            "type": "object",
            "properties": {
                "highlightColour": {
                    "description": "Gets or sets highlight colour setting",
                    "type": "string"
                }
            }
        },
        "LanguageSettingsDto": {
            "description": "Branded Portal Language Settings",
            "type": "object",
            "properties": {
                "language": {
                    "description": "Gets or sets language settings",
                    "enum": [
                        "EN",
                        "FR"
                    ],
                    "type": "string"
                },
                "brandedPortalMultiLanguageLinks": {
                    "description": "Gets or sets branded portal links",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BrandedPortalMultiLanguageLink"
                    }
                }
            }
        },
        "BrandedPortalSkinColorsDetailDto": {
            "description": "Branded Portal Skin Colors Detail",
            "type": "object",
            "properties": {
                "backgroundAssetCardColor": {
                    "description": "Asset card background color.",
                    "type": "string"
                },
                "backgroundAssetCardHeaderColor": {
                    "description": "Asset card header color.",
                    "type": "string"
                },
                "backgroundHeaderColor": {
                    "description": "Header background color.",
                    "type": "string"
                },
                "backgroundMainColor": {
                    "description": "Main background color.",
                    "type": "string"
                },
                "backgroundPageColor": {
                    "description": "Page background color.",
                    "type": "string"
                },
                "backgroundReviewActionsColor": {
                    "description": "Review actions backgroundColor",
                    "type": "string"
                },
                "buttonColor": {
                    "description": "Button Color",
                    "type": "string"
                },
                "buttonInactiveColor": {
                    "description": "Inactive button color.",
                    "type": "string"
                },
                "highlightColor": {
                    "description": "Highlight color",
                    "type": "string"
                },
                "lineColor": {
                    "description": "Line color.",
                    "type": "string"
                },
                "overlayColor": {
                    "description": "Overlay color.",
                    "type": "string"
                },
                "tableOddRowColor": {
                    "description": "Alternating row color.",
                    "type": "string"
                },
                "textColor": {
                    "description": "Text color",
                    "type": "string"
                },
                "textHighlightColor": {
                    "description": "Highlighted text color.",
                    "type": "string"
                },
                "textInactiveColor": {
                    "description": "Inactive text color.",
                    "type": "string"
                },
                "treeFolderColor": {
                    "description": "Tree Folder color.",
                    "type": "string"
                },
                "textTreeColor": {
                    "description": "Text Tree Color.",
                    "type": "string"
                },
                "backgroundTableHeaderColor": {
                    "description": "Background TableHeader Color.",
                    "type": "string"
                },
                "backgroundModalHeaderColor": {
                    "description": "Background ModalHeader Color.",
                    "type": "string"
                },
                "focusOutlineColor": {
                    "description": "Focus Outline Color for WCAG",
                    "type": "string"
                }
            }
        },
        "BrandedPortalMultiLanguageLink": {
            "type": "object",
            "properties": {
                "language": {
                    "enum": [
                        "EN",
                        "FR"
                    ],
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "BrandedPortalDto": {
            "description": "Branded Portal",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "publicLiveUrl": {
                    "description": "Gets or sets the publicLiveUrl.",
                    "type": "string"
                },
                "status": {
                    "description": "Gets or sets the status.",
                    "enum": [
                        "Unknown",
                        "Draft",
                        "Live",
                        "Disabled",
                        "Deleted"
                    ],
                    "type": "string"
                },
                "createdAt": {
                    "format": "date-time",
                    "description": "Gets or sets the createdAt.",
                    "type": "string"
                },
                "draftModifiedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the draftModifiedAt.",
                    "type": "string"
                },
                "lastModifiedBy": {
                    "$ref": "#/definitions/UserRecordDto",
                    "description": "Gets or sets the lastModifiedBy."
                },
                "hasUnpublishedChanges": {
                    "description": "Gets or sets the hasUnpublishedChanges.",
                    "type": "boolean"
                },
                "pageViews": {
                    "format": "int32",
                    "description": "Shows the total number of views (page loads) the branded portal has had.",
                    "type": "integer"
                },
                "downloads": {
                    "description": "Shows the total number of downloads from that portal, or \"Disabled\" when asset download is not enabled.",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "BrandedPortalDuplicatePostDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "brandedPortalVersion": {
                    "enum": [
                        "Draft",
                        "Live"
                    ],
                    "type": "string"
                }
            }
        },
        "UrlSettingsDto": {
            "description": "Branded Portal Url Settings",
            "type": "object",
            "properties": {
                "host": {
                    "description": "Gets or sets host setting",
                    "type": "string"
                },
                "path": {
                    "description": "Gets or sets path setting",
                    "type": "string"
                }
            }
        },
        "BrandedPortalFolderDto": {
            "description": "Represents a branded portal folder for storing assets",
            "type": "object",
            "properties": {
                "assetCount": {
                    "format": "int64",
                    "description": "The total number of assets in the folder",
                    "type": "integer"
                },
                "assets": {
                    "description": "The assets",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BrandedPortalAssetDto"
                    }
                }
            }
        },
        "BrandedPortalAssetDto": {
            "description": "Public Branded Portal Asset",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Asset Id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "title": {
                    "description": "Title of the asset.",
                    "type": "string"
                },
                "media": {
                    "$ref": "#/definitions/BrandedPortalMediaDto",
                    "description": "Information about the media"
                },
                "file": {
                    "$ref": "#/definitions/BrandedFolderFileDto",
                    "description": "Information about the file"
                },
                "visible": {
                    "description": "Information about asset visibility on public page",
                    "type": "boolean"
                },
                "brandedPortalVersionSections": {
                    "description": "Branded portal version sections dictionary",
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "BrandedPortalMediaDto": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "small": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                },
                "large": {
                    "type": "string"
                },
                "medium": {
                    "type": "string"
                },
                "download": {
                    "type": "string"
                },
                "preview": {
                    "type": "string"
                },
                "downloadRequest": {
                    "type": "string",
                    "readOnly": true
                },
                "stream": {
                    "type": "string"
                },
                "sasExpiry": {
                    "format": "int64",
                    "type": "integer"
                },
                "sasRenewal": {
                    "format": "int64",
                    "type": "integer"
                },
                "renditionItemCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "autodeskUrn": {
                    "type": "string"
                }
            }
        },
        "BrandedFolderFileDto": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "fileType": {
                    "type": "string"
                }
            }
        },
        "BrandedPortalMoveAssetsRequest": {
            "type": "object",
            "properties": {
                "assetIds": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "sourceSectionId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "destinationSectionId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "BrandedPortalAssetValidationResultDto": {
            "description": "Represents branded portal asset validation info",
            "type": "object",
            "properties": {
                "assetId": {
                    "format": "uuid",
                    "description": "Gets or sets the asset id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "assetFile": {
                    "$ref": "#/definitions/BrandedFolderFileDto",
                    "description": "Gets or sets the asset title."
                },
                "sectionIds": {
                    "description": "Gets or sets the section ids.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "BrandedPortalSectionSyncPostDetail": {
            "description": "Representation of sync details",
            "type": "object",
            "properties": {
                "categoryId": {
                    "format": "uuid",
                    "description": "Category id to be synced or unsynced",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "lightboxId": {
                    "format": "uuid",
                    "description": "Lightbox id to be synced or unsynced",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "BrandedPortalSectionSyncDetailsDto": {
            "type": "object",
            "properties": {
                "brandedPortalId": {
                    "format": "uuid",
                    "description": "Gets or sets the branded portal id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "versionId": {
                    "format": "uuid",
                    "description": "Gets or sets the version id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "sectionId": {
                    "format": "uuid",
                    "description": "Gets or sets the section id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "syncType": {
                    "description": "Gets or sets the sync type.",
                    "enum": [
                        "Category",
                        "Lightbox"
                    ],
                    "type": "string"
                },
                "categoryId": {
                    "format": "uuid",
                    "description": "Gets or sets the category id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "lightboxId": {
                    "format": "uuid",
                    "description": "Gets or sets the lightbox id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "treePath": {
                    "description": "Gets or sets the tree path of the synced category.",
                    "type": "string"
                },
                "treeIdPath": {
                    "description": "Gets or sets the tree id path of the synced category.",
                    "type": "string"
                }
            }
        },
        "PublicBrandedPortalDetailsDto": {
            "description": "Live branded portal details",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "libraryId": {
                    "format": "uuid",
                    "description": "Gets or sets the library id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "version": {
                    "format": "uuid",
                    "description": "Gets or sets the version.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "libraryName": {
                    "description": "Library Name",
                    "type": "string"
                },
                "host": {
                    "description": "Gets or sets the host.",
                    "type": "string"
                },
                "path": {
                    "description": "Gets or sets the path.",
                    "type": "string"
                },
                "pageLayout": {
                    "description": "Gets or sets the page layout.",
                    "type": "string"
                },
                "navigationSettings": {
                    "$ref": "#/definitions/NavigationSettingsDto",
                    "description": "Gets or sets navigation settings"
                },
                "searchSettings": {
                    "$ref": "#/definitions/SearchSettingsDto",
                    "description": "Gets or sets search settings"
                },
                "downloadSettings": {
                    "$ref": "#/definitions/DownloadSettingsDto",
                    "description": "Gets or sets downloads settings"
                },
                "highlightColourSettings": {
                    "$ref": "#/definitions/HighlightColourSettingsDto",
                    "description": "Gets or sets highlight colour settings"
                },
                "languageSettings": {
                    "$ref": "#/definitions/LanguageSettingsDto",
                    "description": "Gets or sets language settings"
                },
                "lastPublishedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the last published datetime.",
                    "type": "string"
                },
                "defaultLogoFilePath": {
                    "description": "Gets or sets default logo file path",
                    "type": "string"
                },
                "skinColors": {
                    "$ref": "#/definitions/BrandedPortalSkinColorsDetailDto",
                    "description": "Gets or sets skin colors"
                }
            }
        },
        "PublicBrandedPortalFolderDto": {
            "description": "Represents a branded portal folder for storing assets",
            "type": "object",
            "properties": {
                "assetCount": {
                    "format": "int64",
                    "description": "The total number of assets in the folder",
                    "type": "integer"
                },
                "assets": {
                    "description": "The assets",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PublicBrandedPortalAssetDto"
                    }
                }
            }
        },
        "PublicBrandedPortalAssetDto": {
            "description": "Public Branded Portal Asset",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Asset Id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "title": {
                    "description": "Title of the asset.",
                    "type": "string"
                },
                "media": {
                    "$ref": "#/definitions/PublicBrandedPortalMediaDto",
                    "description": "Information about the media"
                },
                "file": {
                    "$ref": "#/definitions/PublicBrandedFolderFileDto",
                    "description": "Information about the file"
                }
            }
        },
        "PublicBrandedPortalMediaDto": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "small": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                },
                "large": {
                    "type": "string"
                },
                "medium": {
                    "type": "string"
                },
                "download": {
                    "type": "string"
                },
                "preview": {
                    "type": "string"
                },
                "downloadRequest": {
                    "type": "string",
                    "readOnly": true
                },
                "stream": {
                    "type": "string"
                },
                "sasExpiry": {
                    "format": "int64",
                    "type": "integer"
                },
                "sasRenewal": {
                    "format": "int64",
                    "type": "integer"
                },
                "renditionItemCount": {
                    "format": "int64",
                    "type": "integer"
                },
                "autodeskUrn": {
                    "type": "string"
                }
            }
        },
        "PublicBrandedFolderFileDto": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "fileType": {
                    "type": "string"
                }
            }
        },
        "RenditionKindDto": {
            "description": "Represents a rendition kind",
            "type": "object",
            "properties": {
                "renditionKindId": {
                    "format": "uuid",
                    "description": "Gets or sets the rendition kind id .",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "code": {
                    "format": "int32",
                    "description": "Gets or sets the code.",
                    "type": "integer"
                },
                "description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "height": {
                    "format": "int32",
                    "description": "Gets or sets the height.",
                    "type": "integer"
                },
                "isDefault": {
                    "description": "Gets or sets a value indicating whether is default.",
                    "type": "boolean"
                },
                "mimeType": {
                    "description": "Gets or sets the mime type.",
                    "type": "string"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "quality": {
                    "format": "int32",
                    "description": "Gets or sets the quality.",
                    "type": "integer"
                },
                "targetFileExtension": {
                    "description": "Gets or sets the target file extension.",
                    "type": "string"
                },
                "width": {
                    "format": "int32",
                    "description": "Gets or sets the width.",
                    "type": "integer"
                },
                "colorspace": {
                    "description": "Gets or sets the colorspace.",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "PublicBrandedPortalTermsAndConditionsDto": {
            "type": "object",
            "properties": {
                "libraryName": {
                    "description": "Library Name",
                    "type": "string"
                },
                "displayTermsAndConditions": {
                    "description": "Gets or sets a value indicating whether [display terms and conditions].",
                    "type": "boolean"
                },
                "termsAndConditionsNotice": {
                    "description": "Gets or sets the terms and conditions notice.",
                    "type": "string"
                },
                "termsAndConditionsUpdated": {
                    "format": "date-time",
                    "description": "Gets or sets the terms and conditions updated.",
                    "type": "string"
                }
            }
        },
        "BrandedPortalDownloadRequest": {
            "type": "object",
            "properties": {
                "assetIds": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "sectionId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "zipFileName": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "Asset",
                        "Section",
                        "BrandedPortal"
                    ],
                    "type": "string"
                }
            }
        },
        "BrandedPortalDownloadDto": {
            "type": "object",
            "properties": {
                "DownloadId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "ZipFileName": {
                    "type": "string"
                },
                "AssetIds": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "SectionId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "Type": {
                    "enum": [
                        "Asset",
                        "Section",
                        "BrandedPortal"
                    ],
                    "type": "string"
                }
            }
        },
        "BrandedPortalUploadSectionDto": {
            "type": "object",
            "properties": {
                "brandedPortalId": {
                    "format": "uuid",
                    "description": "Gets or sets the branded portal id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "versionId": {
                    "format": "uuid",
                    "description": "Gets or sets the version id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "sectionId": {
                    "format": "uuid",
                    "description": "Gets or sets the section id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "categoryIds": {
                    "description": "Gets or sets the category ids.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            }
        },
        "BrandedPortalUploadSectionPostDetail": {
            "description": "Representation of upload section payload details",
            "type": "object",
            "properties": {
                "categoryIds": {
                    "description": "Categories linked to the upload section",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            }
        },
        "CategoryPostDto": {
            "type": "object",
            "properties": {
                "parentId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "description": {
                    "type": "string"
                },
                "treeName": {
                    "type": "string"
                },
                "categoryId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "notification": {
                    "$ref": "#/definitions/NotificationPostDetail"
                }
            }
        },
        "NotificationPostDetail": {
            "type": "object",
            "properties": {
                "entityIds": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "notificationEntityType": {
                    "enum": [
                        "Asset",
                        "Category",
                        "SavedSearches",
                        "CategoryCreation"
                    ],
                    "type": "string"
                },
                "userGroups": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "users": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "CategoryDto": {
            "description": "Represents a container of assets",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Id of category",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "container": {
                    "$ref": "#/definitions/ContainerDto"
                },
                "parentId": {
                    "format": "uuid",
                    "description": "Parent Id of category, if subcategory",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "description": {
                    "type": "string"
                },
                "tree": {
                    "$ref": "#/definitions/TreePath",
                    "description": "The tree path for this folder"
                },
                "subcats": {
                    "$ref": "#/definitions/SubCategoryInformation",
                    "description": "Gets or sets the subcategories information."
                },
                "assetCount": {
                    "format": "int32",
                    "description": "The number of assets this folder contains",
                    "type": "integer"
                },
                "record": {
                    "$ref": "#/definitions/RecordDto"
                },
                "subfolderCount": {
                    "format": "int32",
                    "description": "The number of sub folders that this folder contains",
                    "type": "integer"
                },
                "name": {
                    "description": "The name for this category",
                    "type": "string"
                },
                "categoryFeatures": {
                    "$ref": "#/definitions/CategoryFeaturesInfo",
                    "description": "The category feature for this category"
                },
                "includedInBrandedPortalSync": {
                    "type": "boolean"
                },
                "syncedBrandedPortals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "ContainerDto": {
            "description": "The category container.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "type": {
                    "description": "Gets or sets the container type.",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "PermissionSetDto": {
            "type": "object",
            "properties": {
                "permissionSetId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string"
                },
                "assetPermissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdBy": {
                    "type": "string"
                }
            }
        },
        "CategoryUserGroupDto": {
            "type": "object",
            "properties": {
                "CategoryId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "UserGroupId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "AssetsResultDto": {
            "description": "Container object that returns asset count and list of assets for a given asset list request",
            "type": "object",
            "properties": {
                "assetCount": {
                    "format": "int32",
                    "description": "Number of assets in category",
                    "type": "integer"
                },
                "assets": {
                    "description": "List of {Api.v2.Models.AssetDto} in category",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AssetDto"
                    }
                }
            }
        },
        "CategoryFeatureDto": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "featureId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "featureEnabled": {
                    "type": "boolean"
                },
                "categoryAncestorIds": {
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "inheritToChildren": {
                    "type": "boolean"
                }
            }
        },
        "CropPostDetail": {
            "type": "object",
            "properties": {
                "renditionType": {
                    "description": "Gets or sets the source asset rendition type to be cropped.",
                    "enum": [
                        "Original",
                        "RenditionsOriginal",
                        "RenditionsLarge"
                    ],
                    "type": "string"
                },
                "left": {
                    "format": "int32",
                    "description": "Gets or sets the left offset to be cropped.",
                    "type": "integer"
                },
                "top": {
                    "format": "int32",
                    "description": "Gets or sets the top offset to be cropped.",
                    "type": "integer"
                },
                "width": {
                    "format": "int32",
                    "description": "Gets or sets the width to be cropped.",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "description": "Gets or sets the height to be cropped.",
                    "type": "integer"
                },
                "ratio": {
                    "description": "Gets or sets the ratio used for cropping.",
                    "type": "string"
                },
                "applyWatermark": {
                    "description": "Gets or sets the apply of the watermark to cropped asset.",
                    "type": "boolean"
                }
            }
        },
        "CropWithTemplatePostDetail": {
            "type": "object",
            "properties": {
                "scaledWidth": {
                    "format": "int32",
                    "description": "Gets or sets the scaled width to be cropped.",
                    "type": "integer"
                },
                "scaledHeight": {
                    "format": "int32",
                    "description": "Gets or sets the scaled height to be cropped.",
                    "type": "integer"
                },
                "templateId": {
                    "format": "uuid",
                    "description": "Gets or sets the tempalteId to be used for cropping.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "renditionType": {
                    "description": "Gets or sets the source asset rendition type to be cropped.",
                    "enum": [
                        "Original",
                        "RenditionsOriginal",
                        "RenditionsLarge"
                    ],
                    "type": "string"
                },
                "left": {
                    "format": "int32",
                    "description": "Gets or sets the left offset to be cropped.",
                    "type": "integer"
                },
                "top": {
                    "format": "int32",
                    "description": "Gets or sets the top offset to be cropped.",
                    "type": "integer"
                },
                "width": {
                    "format": "int32",
                    "description": "Gets or sets the width to be cropped.",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "description": "Gets or sets the height to be cropped.",
                    "type": "integer"
                },
                "ratio": {
                    "description": "Gets or sets the ratio used for cropping.",
                    "type": "string"
                },
                "applyWatermark": {
                    "description": "Gets or sets the apply of the watermark to cropped asset.",
                    "type": "boolean"
                }
            }
        },
        "CropDetailsDto": {
            "type": "object",
            "properties": {
                "croppedImageUrl": {
                    "type": "string"
                },
                "CropId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "AssetId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "CreatedDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "Height": {
                    "format": "int32",
                    "type": "integer"
                },
                "Width": {
                    "format": "int32",
                    "type": "integer"
                },
                "TemplateName": {
                    "type": "string"
                },
                "Ratio": {
                    "type": "string"
                },
                "TemplateId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "PredefinedCropTemplateDto": {
            "description": "Crop Template",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "type": {
                    "description": "Gets or sets the type.",
                    "enum": [
                        "Dimension",
                        "Ratio"
                    ],
                    "type": "string"
                },
                "x": {
                    "format": "int32",
                    "description": "Gets or sets the x value.",
                    "type": "integer"
                },
                "y": {
                    "format": "int32",
                    "description": "Gets or sets the y value.",
                    "type": "integer"
                },
                "isAddedToCustomTemplates": {
                    "description": "Gets or sets the isAddedToCustomTemplates.",
                    "type": "boolean"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "CropTemplateDto": {
            "description": "Crop Template",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "type": {
                    "description": "Gets or sets the type.",
                    "enum": [
                        "Dimension",
                        "Ratio"
                    ],
                    "type": "string"
                },
                "x": {
                    "format": "int32",
                    "description": "Gets or sets the x value.",
                    "type": "integer"
                },
                "y": {
                    "format": "int32",
                    "description": "Gets or sets the y value.",
                    "type": "integer"
                },
                "isPredefined": {
                    "description": "Gets or sets the isPredefined.",
                    "type": "boolean"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "GenerateDirectLinkPostDetail": {
            "type": "object",
            "properties": {
                "RenditionSettings": {
                    "$ref": "#/definitions/RenditionSettings"
                },
                "LinkSettings": {
                    "$ref": "#/definitions/LinkSettings"
                }
            }
        },
        "RenditionSettings": {
            "type": "object",
            "properties": {
                "Size": {
                    "$ref": "#/definitions/RenditionSize"
                },
                "Format": {
                    "type": "string"
                }
            }
        },
        "LinkSettings": {
            "type": "object",
            "properties": {
                "IsDevModeEnabled": {
                    "type": "boolean"
                },
                "LinkName": {
                    "type": "string"
                },
                "IsEmbedCode": {
                    "type": "boolean"
                },
                "IsUniqueLink": {
                    "type": "boolean"
                },
                "TurnSubtitlesOn": {
                    "type": "boolean"
                },
                "ChosenLanguages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "RenditionSize": {
            "type": "object",
            "properties": {
                "Type": {
                    "enum": [
                        "Undefined",
                        "XLarge",
                        "Widescreen",
                        "Fullscreen",
                        "Large",
                        "Medium",
                        "Small",
                        "Thumbnail",
                        "Original",
                        "Custom",
                        "Widescreen360p",
                        "Widescreen480p",
                        "Widescreen720p",
                        "Widescreen1080p"
                    ],
                    "type": "string"
                },
                "Width": {
                    "format": "int32",
                    "type": "integer"
                },
                "Height": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "DirectLinkDto": {
            "type": "object",
            "properties": {
                "directLinkId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "cdnLink": {
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "DirectLinkDetailDto": {
            "description": "The Asset direct link detail.",
            "type": "object",
            "properties": {
                "assetId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "directLinkId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "cdnLink": {
                    "type": "string"
                },
                "linkName": {
                    "type": "string"
                },
                "createdAt": {
                    "format": "date-time",
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/UserRecordDto"
                },
                "selectedOptions": {
                    "type": "string"
                },
                "state": {
                    "enum": [
                        "Deactivated",
                        "Active",
                        "Broken",
                        "Archived"
                    ],
                    "type": "string"
                },
                "modifiedDateTime": {
                    "format": "date-time",
                    "type": "string"
                },
                "uniqueViews": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalViews": {
                    "format": "int32",
                    "type": "integer"
                },
                "totalBandwidth": {
                    "format": "double",
                    "type": "number"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "DownloadStatusesDto": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DownloadStatusDto"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "DownloadStatusDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "batch id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "createdDateTime": {
                    "format": "date-time",
                    "description": "batch create time",
                    "type": "string"
                },
                "fileName": {
                    "description": "name of the file",
                    "type": "string"
                },
                "filePath": {
                    "description": "blob file path",
                    "type": "string"
                },
                "fileSize": {
                    "format": "int64",
                    "description": "size of the file",
                    "type": "integer"
                },
                "itemCount": {
                    "format": "int32",
                    "description": "total items for download",
                    "type": "integer"
                },
                "processedCount": {
                    "format": "int32",
                    "description": "total downloaded",
                    "type": "integer"
                },
                "status": {
                    "description": "current status of the batch",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "DownloadSettingsCustomPostDetail": {
            "description": "Class implmentation for DownloadSettingsPostDetail.cs.",
            "type": "object",
            "properties": {
                "attributeIdValues": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttributeValuesPostDetails"
                    }
                },
                "downloadSettingsPostDetail": {
                    "$ref": "#/definitions/DownloadSettingsPostDetail",
                    "description": "Gets or sets the allows asset download."
                }
            }
        },
        "AttributeValuesPostDetails": {
            "type": "object",
            "properties": {
                "fieldId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "DownloadSettingsPostDetail": {
            "description": "Class implmentation for DownloadSettingsPostDetail.cs.",
            "type": "object",
            "properties": {
                "allowsAssetDownload": {
                    "description": "Gets or sets the allows asset download.",
                    "type": "boolean"
                },
                "images": {
                    "$ref": "#/definitions/ImageSettingsDetail",
                    "description": "Gets or sets the image settings."
                },
                "videos": {
                    "$ref": "#/definitions/VideoSettingsDetail",
                    "description": "Gets or sets the video settings."
                },
                "audio": {
                    "$ref": "#/definitions/AudioSettingsDetail",
                    "description": "Gets or sets the audio settings."
                },
                "documents": {
                    "$ref": "#/definitions/DocumentSettingsDetail",
                    "description": "Gets or sets the document settings."
                },
                "csvFormat": {
                    "description": "Gets or sets the CSV format.",
                    "type": "boolean"
                },
                "csvFileName": {
                    "description": "Gets or sets the name of the CSV file.",
                    "type": "string"
                },
                "zipFileName": {
                    "description": "Gets or sets the name of the zip file.",
                    "type": "string"
                },
                "ids": {
                    "description": "Gets or sets the asset list.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            }
        },
        "ImageSettingsDetail": {
            "type": "object",
            "properties": {
                "shareOriginals": {
                    "type": "boolean"
                },
                "format": {
                    "type": "string"
                },
                "dimensions": {
                    "$ref": "#/definitions/DimensionDetail"
                },
                "spectrum": {
                    "enum": [
                        "Unknown",
                        "SRgb",
                        "Cmyk"
                    ],
                    "type": "string"
                },
                "resolution": {
                    "enum": [
                        "Unknown",
                        "Web",
                        "Print"
                    ],
                    "type": "string"
                },
                "addWatermark": {
                    "type": "boolean"
                },
                "watermarkUrl": {
                    "type": "string"
                },
                "includeContactSheet": {
                    "type": "boolean"
                },
                "contactSheet": {
                    "$ref": "#/definitions/ContactSheet"
                },
                "renditionType": {
                    "enum": [
                        "Undefined",
                        "HighDefinition",
                        "LowDefinition",
                        "Original",
                        "Custom"
                    ],
                    "type": "string"
                }
            }
        },
        "VideoSettingsDetail": {
            "type": "object",
            "properties": {
                "shareOriginals": {
                    "type": "boolean"
                },
                "format": {
                    "enum": [
                        "Unknown",
                        "Avi",
                        "Divx",
                        "Flv",
                        "Mkv",
                        "Mov",
                        "Mpeg",
                        "Wmv",
                        "Mp4"
                    ],
                    "type": "string"
                },
                "dimensions": {
                    "$ref": "#/definitions/DimensionDetail"
                },
                "renditionType": {
                    "enum": [
                        "Undefined",
                        "HighDefinition",
                        "LowDefinition",
                        "Original",
                        "Custom"
                    ],
                    "type": "string"
                }
            }
        },
        "AudioSettingsDetail": {
            "type": "object",
            "properties": {
                "shareOriginals": {
                    "type": "boolean"
                },
                "quality": {
                    "$ref": "#/definitions/AudioQualityDetail"
                },
                "format": {
                    "enum": [
                        "Unknown",
                        "Mp3",
                        "Mp4",
                        "Wma"
                    ],
                    "type": "string"
                }
            }
        },
        "DocumentSettingsDetail": {
            "type": "object",
            "properties": {
                "shareOriginals": {
                    "type": "boolean"
                },
                "format": {
                    "enum": [
                        "Unknown",
                        "Originals",
                        "Pdf"
                    ],
                    "type": "string"
                }
            }
        },
        "DimensionDetail": {
            "type": "object",
            "properties": {
                "width": {
                    "format": "int32",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "type": "integer"
                },
                "customDimensions": {
                    "type": "boolean"
                }
            }
        },
        "ContactSheet": {
            "type": "object",
            "properties": {
                "rows": {
                    "format": "int32",
                    "type": "integer"
                },
                "cols": {
                    "format": "int32",
                    "type": "integer"
                },
                "logoBlobUrl": {
                    "type": "string"
                }
            }
        },
        "AudioQualityDetail": {
            "type": "object",
            "properties": {
                "value": {
                    "format": "int32",
                    "type": "integer"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "CreateDownloadResponseDetail": {
            "type": "object",
            "properties": {
                "batchId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "CustomDownloadFormValidationDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "sasUrl": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomDownloadFormValidationErrorsDto"
                    }
                }
            }
        },
        "CustomDownloadFormValidationErrorsDto": {
            "type": "object",
            "properties": {
                "fieldId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "DownloadAssetCustomPostDetail": {
            "type": "object",
            "properties": {
                "attributeIdValues": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttributeValuesPostDetails"
                    }
                },
                "assetId": {
                    "format": "uuid",
                    "description": "Gets or sets the allows asset download.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "DownloadValidationParameters": {
            "description": "Representation of an Asset domain entity.",
            "type": "object",
            "properties": {
                "isDirectDownload": {
                    "type": "boolean"
                }
            }
        },
        "DownloadPolicyDetailsDto": {
            "type": "object",
            "properties": {
                "downloadId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "downloadLink": {
                    "type": "string"
                },
                "preconditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "settings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customFormDetails": {
                    "$ref": "#/definitions/CustomFormFieldsDetails"
                }
            }
        },
        "CustomFormFieldsDetails": {
            "type": "object",
            "properties": {
                "fieldGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomFormFieldGroup"
                    }
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomFormFieldGroupDependency"
                    }
                }
            }
        },
        "CustomFormFieldGroup": {
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "groupName": {
                    "type": "string"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FormFields"
                    }
                },
                "defaultAction": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CustomFormFieldGroupDependency": {
            "type": "object",
            "properties": {
                "dependentGroupId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "dependsOnFieldId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "dependsOnFieldValue": {
                    "type": "string"
                },
                "ruleCondition": {
                    "format": "int32",
                    "type": "integer"
                },
                "action": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "FormFields": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "sequence": {
                    "format": "int32",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "listItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomFormListItem"
                    }
                }
            }
        },
        "CustomFormListItem": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "JsonHomeDocument": {
            "description": "Represents a JsonHomeDocument.",
            "type": "object",
            "properties": {
                "functions": {
                    "description": "Gets the functions.",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/WebFunction"
                    },
                    "readOnly": true
                }
            }
        },
        "WebFunction": {
            "description": "Represents a Function in the {Api.v2.Models.JsonHomeDocument}.",
            "type": "object",
            "properties": {
                "rel": {
                    "description": "Gets the relationship of the web call.",
                    "type": "string"
                },
                "href": {
                    "description": "Gets the relative Url of the web call.",
                    "type": "string"
                },
                "templated": {
                    "description": "Gets a value indicating whether this {Api.v2.Models.WebFunction} is a template.",
                    "type": "boolean"
                },
                "hints": {
                    "description": "Gets the hints for calling the function.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    },
                    "readOnly": true
                }
            }
        },
        "HelpAssetsResultDto": {
            "description": "Container object that returns asset count and list of assets for a given asset list request",
            "type": "object",
            "properties": {
                "assetCount": {
                    "format": "int32",
                    "description": "Number of assets in introduction and help folder",
                    "type": "integer"
                },
                "assets": {
                    "description": "List of {Api.v2.Models.AssetDto} in category",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HelpAssetDto"
                    }
                }
            }
        },
        "HelpAssetDto": {
            "description": "Representation of an Asset domain entity.",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Identifier of the asset.",
                    "type": "string"
                },
                "title": {
                    "description": "Title of the asset.",
                    "type": "string"
                },
                "file": {
                    "$ref": "#/definitions/HelpAssetFileInformation",
                    "description": "The date and time in UTC the asset was created in the system."
                },
                "media": {
                    "$ref": "#/definitions/HelpAssetMediaFileInformation",
                    "description": "Links to renditions of the asset"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "HelpAssetFileInformation": {
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                }
            }
        },
        "HelpAssetMediaFileInformation": {
            "type": "object",
            "properties": {
                "download": {
                    "type": "string"
                },
                "large": {
                    "type": "string"
                },
                "small": {
                    "type": "string"
                },
                "stream": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "KeywordGroupDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Keyword Group Id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "groupKeywordCount": {
                    "format": "int32",
                    "description": "Group Keyword Count",
                    "type": "integer"
                },
                "groupTreePath": {
                    "description": "Group Tree Path",
                    "type": "string"
                },
                "name": {
                    "description": "Keyword Group Name",
                    "type": "string"
                },
                "keywordsInGroup": {
                    "description": "Keywords in a group",
                    "type": "string"
                },
                "subGroupCount": {
                    "format": "int32",
                    "description": "SubGroups Count",
                    "type": "integer"
                },
                "parentId": {
                    "format": "uuid",
                    "description": "Parent Group Id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "LightboxDto": {
            "description": "The lightbox dto.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "assetCount": {
                    "format": "int32",
                    "description": "Gets or sets the asset count.",
                    "type": "integer"
                },
                "owner": {
                    "$ref": "#/definitions/UserRecordDto",
                    "description": "Gets or sets the owner."
                },
                "approverId": {
                    "format": "uuid",
                    "description": "Gets or sets the approver.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "record": {
                    "$ref": "#/definitions/RecordDto",
                    "description": "Gets or sets the record."
                },
                "requestedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the requested at.",
                    "type": "string"
                },
                "includedInBrandedPortalSync": {
                    "type": "boolean"
                },
                "syncedBrandedPortals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "LightboxPostDetailDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Lightbox Id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "approverId": {
                    "format": "uuid",
                    "description": "Gets or sets the ApproverId.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "NotificationSendInfoDto": {
            "type": "object",
            "properties": {
                "validEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "invalidEmails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "UserAndUserGroupDto": {
            "type": "object",
            "properties": {
                "userId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "userEmail": {
                    "type": "string"
                },
                "userGroupId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "userGroupName": {
                    "type": "string"
                },
                "cardinalityOfGroup": {
                    "format": "int32",
                    "type": "integer"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "LibraryLoginInfoDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "OrgUnit Id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "names": {
                    "$ref": "#/definitions/OrganizationalUnitNameDto",
                    "description": "Gets the org unit Name."
                },
                "customization": {
                    "$ref": "#/definitions/OrganizationalUnitCustomizationDto",
                    "description": "Customizations"
                },
                "onlineGalleryPreviewPaneDefault": {
                    "description": "Online gallery preview pane option",
                    "type": "boolean"
                },
                "termsAndConditions": {
                    "$ref": "#/definitions/TermsAndConditionsDto",
                    "description": "Customizations"
                },
                "features": {
                    "description": "Organizational Unit Features.",
                    "type": "object",
                    "additionalProperties": {
                        "enum": [
                            "Active",
                            "Inactive",
                            "Experimental"
                        ],
                        "type": "string"
                    }
                },
                "featuresLastModified": {
                    "description": "Gets the last modified date of features.",
                    "type": "object",
                    "additionalProperties": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "activeDirectoryTenantId": {
                    "description": "Azure active directory linked to the org unit",
                    "type": "string"
                },
                "azureActiveDirectoryDomainName": {
                    "description": "Azure active directory domain name for faster domain resolution",
                    "type": "string"
                },
                "oktaOrgUrl": {
                    "description": "Okta domain name for faster domain resolution",
                    "type": "string"
                },
                "UserIdleTimeOutInMinutes": {
                    "format": "int32",
                    "description": "Gets the orgunit UserIdleTimeOutInMinutes.",
                    "type": "integer"
                },
                "printUIClientID": {
                    "description": "Print UI Client ID.",
                    "type": "string"
                },
                "watermarkFilePath": {
                    "description": "Watermark image Url.",
                    "type": "string"
                },
                "externalIdentityProviderName": {
                    "description": "External identity provider name",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "OrganizationalUnitNameDto": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "OrgUnit Name",
                    "type": "string"
                },
                "canonicalName": {
                    "description": "OrgUnit Canonical Name",
                    "type": "string"
                }
            }
        },
        "OrganizationalUnitCustomizationDto": {
            "type": "object",
            "properties": {
                "headerImageAndLogos": {
                    "$ref": "#/definitions/OrganizationalUnitHeaderImageAndLogosDetail",
                    "description": "OrganizationUnit Logo Url."
                },
                "doNotDisplayRequestUserLink": {
                    "description": "User Request link display",
                    "type": "boolean"
                },
                "skinColors": {
                    "$ref": "#/definitions/OrganizationalUnitSkinColorsDetail",
                    "description": "Organizational unit skin colors"
                },
                "dafaultSkin": {
                    "description": "Organizational unit default skin",
                    "type": "string"
                }
            }
        },
        "TermsAndConditionsDto": {
            "type": "object",
            "properties": {
                "displayTermsAndConditions": {
                    "description": "Gets or sets a value indicating whether [display terms and conditions].",
                    "type": "boolean"
                },
                "termsAcceptanceRequiredForLogin": {
                    "description": "Gets or sets a value indicating whether [terms acceptance required for login].",
                    "type": "boolean"
                },
                "termsAndConditionsNotice": {
                    "description": "Gets or sets the terms and conditions notice.",
                    "type": "string"
                },
                "termsAndConditionsUpdated": {
                    "format": "date-time",
                    "description": "Gets or sets the terms and conditions updated.",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "OrganizationalUnitHeaderImageAndLogosDetail": {
            "type": "object",
            "properties": {
                "logoImageMedium": {
                    "description": "Medium Logo image url",
                    "type": "string"
                },
                "logoImageLarge": {
                    "description": "Large Logo image url",
                    "type": "string"
                },
                "headerImage": {
                    "description": "Header image url",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "OrganizationalUnitSkinColorsDetail": {
            "type": "object",
            "properties": {
                "backgroundAssetCardColor": {
                    "description": "Asset card background color.",
                    "type": "string"
                },
                "backgroundAssetCardHeaderColor": {
                    "description": "Asset cared header color.",
                    "type": "string"
                },
                "backgroundHeaderColor": {
                    "description": "Header background color.",
                    "type": "string"
                },
                "backgroundMainColor": {
                    "description": "Main background color.",
                    "type": "string"
                },
                "backgroundPageColor": {
                    "description": "Page background color.",
                    "type": "string"
                },
                "backgroundReviewActionsColor": {
                    "description": "Review actions backgroundColor",
                    "type": "string"
                },
                "buttonColor": {
                    "description": "Button Color",
                    "type": "string"
                },
                "buttonInactiveColor": {
                    "description": "Inactive button color.",
                    "type": "string"
                },
                "highlightColor": {
                    "description": "Highlight color",
                    "type": "string"
                },
                "lineColor": {
                    "description": "Line color.",
                    "type": "string"
                },
                "overlayColor": {
                    "description": "Overlay color.",
                    "type": "string"
                },
                "tableOddRowColor": {
                    "description": "Alternating row color.",
                    "type": "string"
                },
                "textColor": {
                    "description": "Text color",
                    "type": "string"
                },
                "textHighlightColor": {
                    "description": "Highlighted text color.",
                    "type": "string"
                },
                "textInactiveColor": {
                    "description": "Inactive text color.",
                    "type": "string"
                },
                "treeFolderColor": {
                    "description": "Tree Folder color.",
                    "type": "string"
                },
                "textTreeColor": {
                    "description": "Text Tree Color.",
                    "type": "string"
                },
                "backgroundTableHeaderColor": {
                    "description": "Background TableHeader Color.",
                    "type": "string"
                },
                "backgroundModalHeaderColor": {
                    "description": "Background ModalHeader Color.",
                    "type": "string"
                },
                "focusOutlineColor": {
                    "description": "Focus Outline Color for WCAG",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "LibraryDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets the org unit id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "names": {
                    "$ref": "#/definitions/OrganizationalUnitNameDto",
                    "description": "Gets the org unit Name."
                },
                "contactInformation": {
                    "$ref": "#/definitions/OrganizationalUnitContactDto",
                    "description": "Gets the org unit contact Information."
                },
                "storage": {
                    "$ref": "#/definitions/DiskAllocationDto",
                    "description": "Gets the storage Information."
                },
                "customization": {
                    "$ref": "#/definitions/OrganizationalUnitCustomizationDto",
                    "description": "Customizations"
                },
                "customRoot": {
                    "description": "Gets the customroot name.",
                    "type": "string"
                },
                "printUIClientId": {
                    "description": "Gets the Print UI Client ID.",
                    "type": "string"
                },
                "sendForApprovalNotice": {
                    "description": "Send For Approval Notice text",
                    "type": "string"
                },
                "applyWatermark": {
                    "description": "Describes whether the orgUnit can add a watermark to an asset.",
                    "type": "boolean"
                },
                "watermarkFilePath": {
                    "type": "string"
                },
                "isAmsEnabled": {
                    "description": "Describes whether Azure Media Services is enabled",
                    "type": "boolean"
                },
                "features": {
                    "description": "Gets the features.",
                    "type": "object",
                    "additionalProperties": {
                        "enum": [
                            "Active",
                            "Inactive",
                            "Experimental"
                        ],
                        "type": "string"
                    }
                },
                "featuresLastModified": {
                    "description": "Gets the last modified date of features.",
                    "type": "object",
                    "additionalProperties": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "activeDirectoryTenantId": {
                    "description": "Azure active directory linked to the org unit",
                    "type": "string"
                },
                "userIdleTimeOutInMinutes": {
                    "format": "int32",
                    "type": "integer"
                },
                "deactivateVersioning": {
                    "type": "boolean"
                },
                "oktaOrgUrl": {
                    "type": "string"
                },
                "iamExternalIdentityProviderName": {
                    "type": "string"
                },
                "overwriteGroups": {
                    "type": "boolean"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "OrganizationalUnitContactDto": {
            "type": "object",
            "properties": {
                "street": {
                    "description": "OrgUnit Street",
                    "type": "string"
                },
                "city": {
                    "description": "OrgUnit City",
                    "type": "string"
                },
                "stateProvince": {
                    "description": "OrgUnit StateProvince",
                    "type": "string"
                },
                "country": {
                    "description": "OrgUnit Country",
                    "type": "string"
                },
                "postalCode": {
                    "description": "OrgUnit PostalCode",
                    "type": "string"
                },
                "region": {
                    "description": "OrgUnit Region",
                    "type": "string"
                },
                "phoneNumber": {
                    "description": "OrgUnit Phone Number",
                    "type": "string"
                },
                "website": {
                    "description": "OrgUnit Website",
                    "type": "string"
                }
            }
        },
        "DiskAllocationDto": {
            "type": "object",
            "properties": {
                "quota": {
                    "format": "int64",
                    "description": "Gets or sets the storage quota.",
                    "type": "integer"
                },
                "usage": {
                    "format": "int64",
                    "description": "Gets or sets memory usage.",
                    "type": "integer"
                }
            }
        },
        "PrintUICredsDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets the org unit id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "printUIClientId": {
                    "description": "Gets the print ui client id.",
                    "type": "string"
                },
                "printUIAuthCode": {
                    "description": "Gets the print ui auth code.",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "OrganizationalUnitPortalDetailDto": {
            "type": "object",
            "properties": {
                "domainName": {
                    "description": "Gets the domain name.",
                    "type": "string"
                },
                "hostName": {
                    "description": "Gets the host name.",
                    "type": "string"
                },
                "isDefault": {
                    "description": "Gets the default value.",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "LibraryDetailDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Library id",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Library name",
                    "type": "string"
                },
                "orgUnitId": {
                    "description": "OrgUnit id",
                    "type": "string"
                },
                "orgUnitName": {
                    "description": "OrgUnit name",
                    "type": "string"
                },
                "customRootId": {
                    "format": "uuid",
                    "description": "Category root name",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "customRootName": {
                    "description": "Category root name",
                    "type": "string"
                },
                "storage": {
                    "$ref": "#/definitions/DiskAllocationDto",
                    "description": "Gets the storage Information."
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "PersonDetailsDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "thumbnailUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "identified": {
                    "type": "boolean"
                },
                "libaryId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "SearchContext": {
            "type": "object",
            "properties": {
                "Filters": {
                    "type": "string"
                },
                "Count": {
                    "format": "int32",
                    "type": "integer"
                },
                "Offset": {
                    "format": "int32",
                    "type": "integer"
                },
                "OrderBy": {
                    "type": "string"
                },
                "ContainerFilter": {
                    "type": "string"
                },
                "SearchTerm": {
                    "type": "string"
                },
                "SearchFields": {
                    "type": "string"
                },
                "IncludeTotalCount": {
                    "type": "boolean"
                },
                "IncludeSoftDeleted": {
                    "type": "boolean"
                }
            }
        },
        "PersonsResultDto": {
            "description": "Container object that returns person count and list of persons for a given person list request",
            "type": "object",
            "properties": {
                "personCount": {
                    "format": "int32",
                    "description": "Number of persons in category",
                    "type": "integer"
                },
                "persons": {
                    "description": "List of {Api.v2.Models.Cognitive.PersonDto} in category",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PersonDto"
                    }
                }
            }
        },
        "PersonDto": {
            "description": "Representation of an Asset domain entity.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Identifier of the person.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "thumbnailUrl": {
                    "description": "Thumbnail Url of the person.",
                    "type": "string"
                },
                "numberOfAssets": {
                    "format": "int32",
                    "description": "Number of Assets of the person.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name of the person.",
                    "type": "string"
                },
                "identified": {
                    "description": "Name of the person.",
                    "type": "boolean"
                }
            }
        },
        "ReportTypeDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "sumBy": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "ReportKeyValueCountDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "count": {
                    "format": "int32",
                    "type": "integer"
                },
                "thumbNailUrl": {
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "File",
                        "Image",
                        "Video",
                        "Audio",
                        "Unknown"
                    ],
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "SavedSearchPostDetailDto": {
            "description": "Defines required and optional attributes for saving a new custom search.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "searchQuery": {
                    "description": "Gets or sets the query/formula for the saved search.",
                    "type": "string"
                }
            }
        },
        "SavedSearchDto": {
            "description": "The SavedSearch DTO.",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "searchQuery": {
                    "description": "Gets or sets the query/formula of the saved search.",
                    "type": "string"
                },
                "ownerUserId": {
                    "description": "Gets or sets the saved search owner's id.",
                    "type": "string"
                },
                "ownerUserName": {
                    "description": "Gets or sets the saved search owner's email.",
                    "type": "string"
                },
                "sharedWithOthers": {
                    "description": "Gets or sets the value indicating whether or not this saved search has been shared with anyone else.",
                    "type": "boolean"
                },
                "pinnedSearchForUser": {
                    "description": "Gets or sets the value indicating whether or not this saved search has been pinned for the user.",
                    "type": "boolean"
                },
                "pinnedSearchForGroups": {
                    "description": "Gets or sets the value indicating whether or not this saved search has been pinned for any user group or user's user group depending on user's permissions.",
                    "type": "boolean"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "SavedSearchShareDto": {
            "description": "Defines attributes for sharing a saved search.",
            "type": "object",
            "properties": {
                "savedSearchId": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "shareWithUsers": {
                    "description": "Gets or sets the list of users this saved search should be shared with.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "shareWithGroups": {
                    "description": "Gets or sets the list of groups this saved search should be shared with.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            }
        },
        "SavedSearchSharedWithDto": {
            "description": "Defines attributes for sharing a saved search.",
            "type": "object",
            "properties": {
                "sharedWithUsers": {
                    "description": "Gets or sets the list of users this saved search should be shared with.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "sharedWithGroups": {
                    "description": "Gets or sets the list of groups this saved search should be shared with.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "pinnedForGroups": {
                    "description": "Gets or sets the list of groups this saved search should be pinned for.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                }
            }
        },
        "FacetInfo": {
            "type": "object",
            "properties": {
                "facetName": {
                    "description": "Gets or sets the facet name.",
                    "type": "string"
                },
                "facets": {
                    "description": "Gets or sets the dictionary of facets with facets counts.",
                    "type": "object",
                    "additionalProperties": {
                        "format": "int64",
                        "type": "integer"
                    }
                }
            }
        },
        "ShareDetailsDto": {
            "description": "A representation a gallery's detail",
            "type": "object",
            "properties": {
                "sharedAt": {
                    "format": "date-time",
                    "description": "The date/time in which the gallery was created.",
                    "type": "string"
                },
                "sharedBy": {
                    "$ref": "#/definitions/SharedGalleryOwnerDto",
                    "description": "Details regarding the user that shared the gallery."
                },
                "state": {
                    "description": "The state of the share. Eg: Requested, Ready.. etc",
                    "type": "string"
                },
                "expiryDate": {
                    "format": "date-time",
                    "description": "The expiryDate of the share",
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "SharedGalleryOwnerDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                }
            }
        },
        "ShareRequest": {
            "type": "object",
            "properties": {
                "shareTo": {
                    "description": "Gets or sets the format to share the lightbox to.",
                    "enum": [
                        "Unknown",
                        "OnlineGallery",
                        "ZipFile",
                        "Lightbox"
                    ],
                    "type": "string"
                },
                "shareVia": {
                    "description": "Gets or sets the way the user wants the response (Email/Link).",
                    "enum": [
                        "Unknown",
                        "Email",
                        "Link"
                    ],
                    "type": "string"
                },
                "allowAssetDownload": {
                    "description": "Gets or sets whether assets can be downloaded.",
                    "type": "boolean"
                },
                "images": {
                    "$ref": "#/definitions/ImageSettingsDetail",
                    "description": "Gets or sets the options for downloading images."
                },
                "videos": {
                    "$ref": "#/definitions/VideoSettingsDetail",
                    "description": "Gets or sets the options for downloading videos."
                },
                "audio": {
                    "$ref": "#/definitions/AudioSettingsDetail",
                    "description": "Gets the options for downloading audios."
                },
                "documents": {
                    "$ref": "#/definitions/DocumentSettingsDetail",
                    "description": "Gets the options for downloading documents that are not images or videos."
                },
                "message": {
                    "$ref": "#/definitions/MessageDetail",
                    "description": "Gets the details of the recipients for the share"
                },
                "ids": {
                    "description": "Gets or sets the assets or the single lightbox.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "includeContactSheet": {
                    "description": "Gets or sets the flag to include a contact sheet.",
                    "type": "boolean"
                },
                "shareCode": {
                    "description": "Share code.",
                    "type": "string"
                },
                "lightboxId": {
                    "format": "uuid",
                    "description": "Gets or sets the LightboxId.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "lightboxName": {
                    "description": "Gets or sets the LightboxName.",
                    "type": "string"
                },
                "DynamicWebGallery": {
                    "type": "boolean"
                },
                "gallerySettings": {
                    "$ref": "#/definitions/GallerySettingsDetails",
                    "description": "Gets or Sets GallerySettings"
                }
            }
        },
        "MessageDetail": {
            "type": "object",
            "properties": {
                "recipients": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "GallerySettingsDetails": {
            "description": "Sealed Class GallerySettingsDetails",
            "type": "object",
            "properties": {
                "expiryDate": {
                    "description": "Gets or sets the expiryDate.",
                    "type": "string"
                },
                "galleryPassword": {
                    "description": "Gets or sets the password",
                    "type": "string"
                }
            }
        },
        "ShareResponseDto": {
            "type": "object",
            "properties": {
                "shareId": {
                    "format": "uuid",
                    "description": "The id of the share.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "sharedVia": {
                    "description": "The method that the share was requested.",
                    "enum": [
                        "Unknown",
                        "Email",
                        "Link"
                    ],
                    "type": "string"
                },
                "link": {
                    "description": "The method that the share was requested.",
                    "type": "string"
                }
            }
        },
        "WebGalleryAuthorizationDto": {
            "type": "object",
            "properties": {
                "sessionId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                }
            }
        },
        "UploadLightboxDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "description": "Gets or sets the name.",
                    "type": "string"
                },
                "description": {
                    "description": "Gets or sets the description.",
                    "type": "string"
                },
                "assetCount": {
                    "format": "int32",
                    "description": "Gets or sets the asset count.",
                    "type": "integer"
                },
                "owner": {
                    "$ref": "#/definitions/UserRecordDto",
                    "description": "Gets or sets the owner."
                },
                "approverId": {
                    "format": "uuid",
                    "description": "Gets or sets the approver.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "record": {
                    "$ref": "#/definitions/RecordDto",
                    "description": "Gets or sets the record."
                },
                "requestedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the requested at.",
                    "type": "string"
                },
                "includedInBrandedPortalSync": {
                    "type": "boolean"
                },
                "syncedBrandedPortals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "UploadLightboxForApprovalDto": {
            "description": "The upload lightbox for approval with assets dto.",
            "type": "object",
            "properties": {
                "approverId": {
                    "format": "uuid",
                    "description": "Gets or sets the approver.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "assetIds": {
                    "description": "Gets or sets the list of asset ids to add to the lighbox.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "RestfulDto": {
            "type": "object",
            "properties": {
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "UploadValidationParameters": {
            "description": "Representation of an Asset domain entity.",
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "size": {
                    "format": "int64",
                    "type": "integer"
                },
                "lastModifiedDate": {
                    "type": "string"
                }
            }
        },
        "UploadValidationResultDto": {
            "description": "Representation of an Asset domain entity.",
            "type": "object",
            "properties": {
                "fileName": {
                    "type": "string"
                },
                "validationStatus": {
                    "format": "int32",
                    "type": "integer"
                },
                "assetVersionMessage": {
                    "type": "string"
                },
                "attributePolicy": {
                    "$ref": "#/definitions/CreateUploadAttributeDto"
                },
                "message": {
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "CreateUploadAttributeDto": {
            "type": "object",
            "properties": {
                "createUploadAttributes": {
                    "description": "Gets or sets the attributes.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "UserGroupDto": {
            "type": "object",
            "properties": {
                "roleName": {
                    "description": "Name of the group.",
                    "type": "string"
                },
                "roleDescription": {
                    "description": "Description of the group.",
                    "type": "string"
                },
                "inheritedFrom": {
                    "description": "Gets or sets the inhreited from.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permissions": {
                    "description": "Gets or sets the list of permissions.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the role Id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "repositories": {
                    "description": "Gets or sets the repository identifier.",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string",
                        "example": "00000000-0000-0000-0000-000000000000"
                    }
                },
                "orgUnitId": {
                    "format": "uuid",
                    "description": "Gets or sets the org unit identifier.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "orgUnitName": {
                    "description": "Gets or sets the org unit Name.",
                    "type": "string"
                },
                "libraryName": {
                    "description": "Gets the name of the library.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isDefaultGroup": {
                    "description": "Gets or sets a value indicating whether this instance is default group.",
                    "type": "boolean",
                    "readOnly": true
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "CategoryAccessDto": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FolderAccessDto"
                    }
                },
                "watermarkedCategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FolderAccessDto"
                    }
                },
                "permissionRestrictedCategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FolderAccessDto"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "FolderAccessDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string"
                },
                "parentId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "tree": {
                    "$ref": "#/definitions/TreePath"
                },
                "subfolderCount": {
                    "format": "int32",
                    "type": "integer"
                },
                "hasDirectAccess": {
                    "type": "boolean"
                },
                "permission": {
                    "type": "string"
                },
                "inherited": {
                    "type": "boolean"
                }
            }
        },
        "AppUserDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "Gets or sets the id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "userName": {
                    "description": "Gets or sets the username.",
                    "type": "string"
                },
                "address": {
                    "description": "Gets or sets the address.",
                    "type": "string"
                },
                "orgUnitId": {
                    "format": "uuid",
                    "description": "Gets or sets the organizational unit id.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "applicationName": {
                    "description": "Gets or sets the application name.",
                    "type": "string"
                },
                "defaultGroup": {
                    "description": "Gets or sets the default or custom group name.",
                    "type": "string"
                },
                "userDomain": {
                    "description": "Gets or sets the user domain.",
                    "type": "string"
                },
                "firstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "lastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "department": {
                    "description": "Gets or sets the department.",
                    "type": "string"
                },
                "position": {
                    "description": "Gets or sets the position.",
                    "type": "string"
                },
                "title": {
                    "description": "Gets or sets the title.",
                    "type": "string"
                },
                "officeNumber": {
                    "description": "Gets or sets the office number.",
                    "type": "string"
                },
                "cellularNumber": {
                    "description": "Gets or sets the cellular number.",
                    "type": "string"
                },
                "faxNumber": {
                    "description": "Gets or sets the fax number.",
                    "type": "string"
                },
                "emailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "comment": {
                    "description": "Gets or sets the comment.",
                    "type": "string"
                },
                "defaultSkin": {
                    "description": "Gets or sets the default skin.",
                    "type": "string"
                },
                "additionalMessage": {
                    "description": "Gets or sets the additional message.",
                    "type": "string"
                },
                "adminNotes": {
                    "description": "Gets or sets the admin notes.",
                    "type": "string"
                },
                "lastActiveAt": {
                    "format": "date-time",
                    "description": "Gets or sets the last active at.",
                    "type": "string"
                },
                "lastLockedOutAt": {
                    "format": "date-time",
                    "description": "Gets or sets the last locked out at.",
                    "type": "string"
                },
                "lastLoginAt": {
                    "format": "date-time",
                    "description": "Gets or sets the last login at.",
                    "type": "string"
                },
                "createdAt": {
                    "format": "date-time",
                    "description": "Gets or sets the created at.",
                    "type": "string"
                },
                "expiresAt": {
                    "format": "date-time",
                    "description": "Gets or sets the expires at.",
                    "type": "string"
                },
                "termsandconditionsacceptedat": {
                    "format": "date-time",
                    "description": "Gets or sets the terms and conditions accepted at.",
                    "type": "string"
                },
                "termsConditionsAcceptanceStatus": {
                    "description": "Gets the terms conditions acceptance status.",
                    "enum": [
                        "Unknown",
                        "NotAccepted",
                        "Accepted",
                        "TermsChanged"
                    ],
                    "type": "string"
                },
                "website": {
                    "description": "Gets or sets the web site.",
                    "type": "string"
                },
                "alertsEnabled": {
                    "description": "Gets or sets the alerts enabled.",
                    "type": "boolean"
                },
                "newUserNotification": {
                    "description": "Gets or sets the new user notification.",
                    "type": "boolean"
                },
                "password": {
                    "description": "Gets or sets the password.",
                    "type": "string",
                    "readOnly": true
                },
                "organizationName": {
                    "description": "Gets or sets the Organization name.",
                    "type": "string"
                },
                "isLockedOut": {
                    "description": "Gets or sets the value indicating if the user is locked out.",
                    "type": "boolean"
                },
                "isSuspended": {
                    "description": "Gets or sets a value indicating whether this instance is suspended.",
                    "type": "boolean"
                },
                "isApproved": {
                    "description": "Gets or sets a value indicating whether this instance is approved.",
                    "type": "boolean"
                },
                "userType": {
                    "enum": [
                        "MediaValet",
                        "AzureActiveDirectory"
                    ],
                    "type": "string"
                },
                "isExternalUser": {
                    "description": "Readonly property to determine if the user is created within MediaValet",
                    "type": "boolean",
                    "readOnly": true
                },
                "roleId": {
                    "format": "uuid",
                    "description": "Gets or sets the Role ID.",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "PatchOperation": {
            "type": "object",
            "properties": {
                "op": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                },
                "from": {
                    "type": "string"
                }
            }
        },
        "UserUpdateDto": {
            "type": "object",
            "properties": {
                "AdditionalMessage": {
                    "description": "Gets or sets the additional message.",
                    "type": "string"
                },
                "Address": {
                    "description": "Gets or sets the address.",
                    "type": "string"
                },
                "AdminNotes": {
                    "description": "Gets or sets the admin notes.",
                    "type": "string"
                },
                "CellularNumber": {
                    "description": "Gets or sets the cellular number.",
                    "type": "string"
                },
                "Comment": {
                    "description": "Gets or sets the comment.",
                    "type": "string"
                },
                "DefaultGroup": {
                    "description": "Gets or sets the default group.",
                    "type": "string"
                },
                "Department": {
                    "description": "Gets or sets the department.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "ExpiresAt": {
                    "format": "date-time",
                    "description": "Gets or sets the expires at.",
                    "type": "string"
                },
                "FaxNumber": {
                    "description": "Gets or sets the fax number.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "OfficeNumber": {
                    "description": "Gets or sets the office number.",
                    "type": "string"
                },
                "Position": {
                    "description": "Gets or sets the position.",
                    "type": "string"
                },
                "Title": {
                    "description": "Gets or sets the title.",
                    "type": "string"
                },
                "UserName": {
                    "description": "Gets or sets the username.",
                    "type": "string"
                },
                "Website": {
                    "description": "Gets or sets the website.",
                    "type": "string"
                },
                "AlertsEnabled": {
                    "description": "Gets or sets the alerts enabled.",
                    "type": "boolean"
                },
                "IsApproved": {
                    "description": "Gets or sets a value indicating whether this instance is approved.",
                    "type": "boolean"
                },
                "IsSuspended": {
                    "description": "Gets or sets a value indicating whether this instance is suspended.",
                    "type": "boolean"
                },
                "OrganizationName": {
                    "description": "Gets or sets the name of the organization.",
                    "type": "string"
                },
                "TermsAndConditionsAcceptedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the time when the terms and conditions were accepted.",
                    "type": "string"
                },
                "TermsAndConditionsAcceptanceStatus": {
                    "description": "Gets or sets the acceptance status of the terms and conditions.",
                    "enum": [
                        "Unknown",
                        "NotAccepted",
                        "Accepted",
                        "TermsChanged"
                    ],
                    "type": "string"
                }
            }
        },
        "UserPostDto": {
            "type": "object",
            "properties": {
                "AdditionalMessage": {
                    "description": "Gets or sets the additional message.",
                    "type": "string"
                },
                "Address": {
                    "description": "Gets or sets the address.",
                    "type": "string"
                },
                "AdminNotes": {
                    "description": "Gets or sets the admin notes.",
                    "type": "string"
                },
                "CellularNumber": {
                    "description": "Gets or sets the cellular number.",
                    "type": "string"
                },
                "Comment": {
                    "description": "Gets or sets the comment.",
                    "type": "string"
                },
                "DefaultGroup": {
                    "description": "Gets or sets the default group.",
                    "type": "string"
                },
                "Department": {
                    "description": "Gets or sets the department.",
                    "type": "string"
                },
                "EmailAddress": {
                    "description": "Gets or sets the email address.",
                    "type": "string"
                },
                "ExpiresAt": {
                    "format": "date-time",
                    "description": "Gets or sets the expires at.",
                    "type": "string"
                },
                "FaxNumber": {
                    "description": "Gets or sets the fax number.",
                    "type": "string"
                },
                "FirstName": {
                    "description": "Gets or sets the first name.",
                    "type": "string"
                },
                "IsApproved": {
                    "description": "Gets or sets the user approval status.",
                    "type": "boolean"
                },
                "LastName": {
                    "description": "Gets or sets the last name.",
                    "type": "string"
                },
                "OfficeNumber": {
                    "description": "Gets or sets the office number.",
                    "type": "string"
                },
                "PasswordInformation": {
                    "$ref": "#/definitions/PasswordInformationDto",
                    "description": "Gets or sets the password information."
                },
                "Position": {
                    "description": "Gets or sets the position.",
                    "type": "string"
                },
                "Title": {
                    "description": "Gets or sets the title.",
                    "type": "string"
                },
                "UserName": {
                    "description": "Gets or sets the username.",
                    "type": "string"
                },
                "Website": {
                    "description": "Gets or sets the website.",
                    "type": "string"
                },
                "AlertsEnabled": {
                    "description": "Gets or sets the alerts enabled.",
                    "type": "boolean"
                },
                "NewUserNotification": {
                    "description": "Gets or sets the new user notification.",
                    "type": "boolean"
                },
                "OrganizationName": {
                    "description": "Gets or sets the name of the organization.",
                    "type": "string"
                },
                "TermsAndConditionsAcceptedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the terms and conditions accepted at.",
                    "type": "string"
                },
                "TermsAndConditionsAccepted": {
                    "description": "Gets or sets terms and conditions accepted or not.",
                    "type": "boolean"
                },
                "TermsConditionsAcceptanceStatus": {
                    "description": "Gets the terms conditions acceptance status.",
                    "enum": [
                        "Unknown",
                        "NotAccepted",
                        "Accepted",
                        "TermsChanged"
                    ],
                    "type": "string"
                }
            }
        },
        "PasswordInformationDto": {
            "type": "object",
            "properties": {
                "Password": {
                    "description": "Gets or sets the password.",
                    "type": "string"
                },
                "PasswordSalt": {
                    "description": "Gets or sets the password salt.",
                    "type": "string"
                },
                "RecoveryQuestion": {
                    "description": "Gets or sets the recovery question.",
                    "type": "string"
                },
                "RecoveryAnswer": {
                    "description": "Gets or sets the recovery answer.",
                    "type": "string"
                },
                "FailedLoginAttemptWindowsStart": {
                    "format": "date-time",
                    "description": "Gets or sets the failed login attempt windows start.",
                    "type": "string"
                },
                "FailedAnswerAttemptWindowsStart": {
                    "format": "date-time",
                    "description": "Gets or sets the failed answer attempt windows start.",
                    "type": "string"
                },
                "LastChangedAt": {
                    "format": "date-time",
                    "description": "Gets or sets the last changed at.",
                    "type": "string"
                },
                "PasswordStatus": {
                    "description": "Gets or sets the password status.",
                    "enum": [
                        "Unknown",
                        "Ok",
                        "RequiresChange"
                    ],
                    "type": "string"
                },
                "PasswordFormat": {
                    "description": "Gets or sets the format.",
                    "enum": [
                        "Clear",
                        "Hashed",
                        "Encrypted"
                    ],
                    "type": "string"
                },
                "ConsecutiveFailedLoginAttempts": {
                    "format": "int32",
                    "description": "Gets or sets the consecutive failed login attempts.",
                    "type": "integer"
                },
                "FailedLoginAttemptWindowStart": {
                    "format": "date-time",
                    "description": "Gets or sets the failed login attempt window start.",
                    "type": "string"
                },
                "ConsecutiveFailedAnswerAttempts": {
                    "format": "int32",
                    "description": "Gets or sets the consecutive failed answer attempts.",
                    "type": "integer"
                },
                "FailedAnswerAttemptsWindowStart": {
                    "format": "date-time",
                    "description": "Gets or sets the failed answer attempts window start.",
                    "type": "string"
                },
                "MustChangePassword": {
                    "description": "Gets or sets a value indicating whether must change password.",
                    "type": "boolean"
                }
            }
        },
        "UserRecordsDto": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppUserDto"
                    }
                },
                "userCount": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "UserRegistrationFieldsDto": {
            "type": "object",
            "properties": {
                "fieldGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserFieldGroupDto"
                    }
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserFieldGroupDependencyDto"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "UserFieldGroupDto": {
            "type": "object",
            "properties": {
                "groupId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "defaultAction": {
                    "format": "int32",
                    "type": "integer"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserFieldDto"
                    }
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "UserFieldGroupDependencyDto": {
            "type": "object",
            "properties": {
                "dependentGroupId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "dependsOnFieldId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "dependsOnFieldValue": {
                    "type": "string"
                },
                "ruleCondition": {
                    "format": "int32",
                    "type": "integer"
                },
                "action": {
                    "format": "int32",
                    "type": "integer"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "UserFieldDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "isRequired": {
                    "type": "boolean"
                },
                "sequence": {
                    "format": "int32",
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "listItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ListItemDto"
                    }
                },
                "name": {
                    "type": "string"
                },
                "isStandardField": {
                    "type": "boolean"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "ListItemDto": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                },
                "_links": {
                    "$ref": "#/definitions/WebLinks",
                    "description": "Web links"
                },
                "translationKeys": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                },
                "interpolations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object"
                    }
                }
            }
        },
        "UserRegistrationFieldsPostDto": {
            "type": "object",
            "properties": {
                "TermsConditionsAcceptanceStatus": {
                    "type": "string"
                },
                "Fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RegistrationFieldPostDetail"
                    }
                }
            }
        },
        "RegistrationFieldPostDetail": {
            "type": "object",
            "properties": {
                "fieldId": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "value": {
                    "type": "object"
                }
            }
        },
        "UserCustomFieldDto": {
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "label": {
                    "type": "string"
                },
                "value": {
                    "type": "object"
                },
                "sequence": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "securitySchemes" : {
          "ApiKeyAuth" : {
            "name" : "Authorization",
            "in" : "header",
            "type" : "BearerToken",
            "description" : "Your Bearer Token"
          }
    },
}
}
